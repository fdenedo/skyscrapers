{"version":3,"sources":["src/utils/Observer.js","src/models/Renderer.js","src/helpers/helper.js","src/models/InputHandler.js","src/models/PuzzleManager.js","src/models/Puzzle.js","src/models/GameManager.js","src/App.js","node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["Observer","exports","_classCallCheck","_createClass","key","value","notify","event","data","Error","Observable","addObserver","observer","observers","push","removeObserver","index","indexOf","splice","notifyObservers","_iterator","_createForOfIteratorHelper","_step","s","n","done","err","e","f","_Observer2","require","_class","_typeof","o","Symbol","iterator","constructor","prototype","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","_toPropertyKey","protoProps","staticProps","_inherits","subClass","superClass","create","_setPrototypeOf","p","setPrototypeOf","bind","__proto__","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf","result","NewTarget","Reflect","construct","arguments","apply","_possibleConstructorReturn","self","call","_assertThisInitialized","ReferenceError","sham","Proxy","Boolean","valueOf","getPrototypeOf","_defineProperty","obj","arg","_toPrimitive","String","input","hint","prim","toPrimitive","undefined","res","Number","Renderer","default","_Observer","_super","_this","grid","document","querySelector","console","log","concat","deselectAll","toggleCellSelect","select","updateSelectedCellValues","clearSelectedCells","createAndAppendDiv","parentElement","manipulateFn","newDiv","createElement","appendChild","generateGrid","size","innerHTML","gridSize","Math","min","max","window","innerWidth","cellSize","style","width","height","gridTemplateColumns","pow","cell","classList","add","CELL_CLASS","dataset","x","y","floor","cellInnerContainer","CELL_INNER_CONTAINER_CLASS","textContent","topClueContainer","CLUE_CONTAINER_CLASS","CLUE_TOP_CLASS","bottomClueContainer","CLUE_BOTTOM_CLASS","leftClueContainer","CLUE_LEFT_CLASS","rightClueContainer","CLUE_RIGHT_CLASS","clueContainers","mainAxisSize","crossAxisSize","forEach","container","clueCell","CLUE_CELL_CLASS","contains","CELL_SELECTED_CLASS","deselect","remove","_this2","cells","querySelectorAll","SELECTED_CELL_SELECTOR","toggle","selectedCells","changedCells","CELL_GIVEN_CLASS","populateGivenCellAt","setCellAsGiven","populateClues","clueContainerPosition","cluesToPopulate","clueContainerSelector","highlightError","highlightSeenClueError","position","clue","getAllSelectedCells","findAncestor","el","sel","matches","matchesSelector","_Renderer","_interopRequireDefault","_helper","__esModule","InputHandler","_Observable","shiftPressed","maxSize","initialiseGlobalEventListeners","addEventListener","handleKeyPress","setMaxSize","addClickEventListenersToGrid","_this3","GRID_CLASS","handleCellClick","clickedCell","keyPressed","isNaN","val","parseInt","map","allowArrayLike","it","Array","isArray","_unsupportedIterableToArray","F","_e","normalCompletion","didErr","step","next","_e2","return","minLen","_arrayLikeToArray","toString","slice","name","from","test","arr","len","arr2","PuzzleManager","renderer","puzzle","puzzleState","userInput","currentState","isFilled","isSolved","checkCellsForErrors","_iterator2","_step2","newPuzzle","givenDigits","j","bottomClues","topClues","leftClues","rightClues","Puzzle","_ref","_ref$givenDigits","_ref$topClues","_ref$bottomClues","_ref$leftClues","_ref$rightClues","row","_toConsumableArray","errors","validate","duplicatesInRow","duplicatesInColumn","isClueSatisfied","toJSON","fromJSON","json","getRow","getColumn","checkForDuplicates","array","valueToIndex","Map","duplicateIndices","has","get","set","Set","duplicates","dup","clueDirection","reverse","seen","tallest","errorCells","checkedRows","checkedColumns","_loop","dupesInRow","c","dupesInColumn","GameManager","timer","showErrors","zenMode","solved","startTimer","start","stop","_InputHandler","_PuzzleManager","_Puzzle","_GameManager","main","inputHandler","puzzleManager","examplePuzzle","examplePuzzle2","OVERLAY_ID","OldModule","module","bundle","Module","moduleName","hot","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","JSON","parse","type","handled","assets","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","id","every","generated","js","clear","hmrApply","v","hmrAcceptRun","reload","close","onclose","removeErrorOverlay","error","message","stack","overlay","createErrorOverlay","body","getElementById","stackTrace","innerText","getParents","modules","parents","k","d","dep","Function","deps","cached","cache","some","cb"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAAaA,QAAQ,GAAAC,OAAA,CAAAD,QAAA;EAAA,SAAAA,SAAA;IAAAE,eAAA,OAAAF,QAAA;EAAA;EAAAG,YAAA,CAAAH,QAAA;IAAAI,GAAA;IAAAC,KAAA,EACjB,SAAAC,OAAOC,KAAK,EAAEC,IAAI,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,8CAA8C,CAAC;IACnE;EAAC;EAAA,OAAAT,QAAA;AAAA;AAAA,IAGQU,UAAU,GAAAT,OAAA,CAAAS,UAAA;EAAA,SAAAA,WAAA;IAAAR,eAAA,OAAAQ,UAAA;EAAA;EAAAP,YAAA,CAAAO,UAAA;IAAAN,GAAA;IAAAC,KAAA,EACnB,SAAAM,YAAYC,QAAQ,EAAE;MAClB,IAAI,CAACC,SAAS,CAACC,IAAI,CAACF,QAAQ,CAAC;IAC/B;EAAC;IAAAR,GAAA;IAAAC,KAAA,EAED,SAAAU,eAAeH,QAAQ,EAAE;MACvB,IAAMI,KAAK,GAAG,IAAI,CAACH,SAAS,CAACI,OAAO,CAACL,QAAQ,CAAC;MAC9C,IAAII,KAAK,GAAG,CAAC,CAAC,EAAE;QACd,IAAI,CAACH,SAAS,CAACK,MAAM,CAACF,KAAK,EAAE,CAAC,CAAC;MACjC;IACF;EAAC;IAAAZ,GAAA;IAAAC,KAAA,EAED,SAAAc,gBAAgBZ,KAAK,EAAEC,IAAI,EAAE;MAAA,IAAAY,SAAA,GAAAC,0BAAA,CACJ,IAAI,CAACR,SAAS;QAAAS,KAAA;MAAA;QAArC,KAAAF,SAAA,CAAAG,CAAA,MAAAD,KAAA,GAAAF,SAAA,CAAAI,CAAA,IAAAC,IAAA,GAAuC;UAAA,IAA5Bb,QAAQ,GAAAU,KAAA,CAAAjB,KAAA;UACjBO,QAAQ,CAACN,MAAM,CAACC,KAAK,EAAEC,IAAI,CAAC;QAC9B;MAAC,SAAAkB,GAAA;QAAAN,SAAA,CAAAO,CAAA,CAAAD,GAAA;MAAA;QAAAN,SAAA,CAAAQ,CAAA;MAAA;IACH;EAAC;EAAA,OAAAlB,UAAA;AAAA;;;;;;;;ACtBP,IAAAmB,UAAA,GAAAC,OAAA;AAAgD,IAAAC,MAAA;AAAA,SAAAC,QAAAC,CAAA,sCAAAD,OAAA,wBAAAE,MAAA,uBAAAA,MAAA,CAAAC,QAAA,aAAAF,CAAA,kBAAAA,CAAA,gBAAAA,CAAA,WAAAA,CAAA,yBAAAC,MAAA,IAAAD,CAAA,CAAAG,WAAA,KAAAF,MAAA,IAAAD,CAAA,KAAAC,MAAA,CAAAG,SAAA,qBAAAJ,CAAA,KAAAD,OAAA,CAAAC,CAAA;AAAA,SAAA/B,gBAAAoC,QAAA,EAAAC,WAAA,UAAAD,QAAA,YAAAC,WAAA,eAAAC,SAAA;AAAA,SAAAC,kBAAAC,MAAA,EAAAC,KAAA,aAAAC,CAAA,MAAAA,CAAA,GAAAD,KAAA,CAAAE,MAAA,EAAAD,CAAA,UAAAE,UAAA,GAAAH,KAAA,CAAAC,CAAA,GAAAE,UAAA,CAAAC,UAAA,GAAAD,UAAA,CAAAC,UAAA,WAAAD,UAAA,CAAAE,YAAA,wBAAAF,UAAA,EAAAA,UAAA,CAAAG,QAAA,SAAAC,MAAA,CAAAC,cAAA,CAAAT,MAAA,EAAAU,cAAA,CAAAN,UAAA,CAAA1C,GAAA,GAAA0C,UAAA;AAAA,SAAA3C,aAAAoC,WAAA,EAAAc,UAAA,EAAAC,WAAA,QAAAD,UAAA,EAAAZ,iBAAA,CAAAF,WAAA,CAAAF,SAAA,EAAAgB,UAAA,OAAAC,WAAA,EAAAb,iBAAA,CAAAF,WAAA,EAAAe,WAAA,GAAAJ,MAAA,CAAAC,cAAA,CAAAZ,WAAA,iBAAAU,QAAA,mBAAAV,WAAA;AAAA,SAAAgB,UAAAC,QAAA,EAAAC,UAAA,eAAAA,UAAA,mBAAAA,UAAA,uBAAAjB,SAAA,0DAAAgB,QAAA,CAAAnB,SAAA,GAAAa,MAAA,CAAAQ,MAAA,CAAAD,UAAA,IAAAA,UAAA,CAAApB,SAAA,IAAAD,WAAA,IAAA/B,KAAA,EAAAmD,QAAA,EAAAP,QAAA,QAAAD,YAAA,aAAAE,MAAA,CAAAC,cAAA,CAAAK,QAAA,iBAAAP,QAAA,gBAAAQ,UAAA,EAAAE,eAAA,CAAAH,QAAA,EAAAC,UAAA;AAAA,SAAAE,gBAAA1B,CAAA,EAAA2B,CAAA,IAAAD,eAAA,GAAAT,MAAA,CAAAW,cAAA,GAAAX,MAAA,CAAAW,cAAA,CAAAC,IAAA,cAAAH,gBAAA1B,CAAA,EAAA2B,CAAA,IAAA3B,CAAA,CAAA8B,SAAA,GAAAH,CAAA,SAAA3B,CAAA,YAAA0B,eAAA,CAAA1B,CAAA,EAAA2B,CAAA;AAAA,SAAAI,aAAAC,OAAA,QAAAC,yBAAA,GAAAC,yBAAA,oBAAAC,qBAAA,QAAAC,KAAA,GAAAC,eAAA,CAAAL,OAAA,GAAAM,MAAA,MAAAL,yBAAA,QAAAM,SAAA,GAAAF,eAAA,OAAAlC,WAAA,EAAAmC,MAAA,GAAAE,OAAA,CAAAC,SAAA,CAAAL,KAAA,EAAAM,SAAA,EAAAH,SAAA,YAAAD,MAAA,GAAAF,KAAA,CAAAO,KAAA,OAAAD,SAAA,YAAAE,0BAAA,OAAAN,MAAA;AAAA,SAAAM,2BAAAC,IAAA,EAAAC,IAAA,QAAAA,IAAA,KAAA/C,OAAA,CAAA+C,IAAA,yBAAAA,IAAA,2BAAAA,IAAA,aAAAA,IAAA,yBAAAvC,SAAA,uEAAAwC,sBAAA,CAAAF,IAAA;AAAA,SAAAE,uBAAAF,IAAA,QAAAA,IAAA,yBAAAG,cAAA,wEAAAH,IAAA;AAAA,SAAAX,0BAAA,eAAAM,OAAA,qBAAAA,OAAA,CAAAC,SAAA,oBAAAD,OAAA,CAAAC,SAAA,CAAAQ,IAAA,2BAAAC,KAAA,oCAAAC,OAAA,CAAA/C,SAAA,CAAAgD,OAAA,CAAAN,IAAA,CAAAN,OAAA,CAAAC,SAAA,CAAAU,OAAA,8CAAAzD,CAAA;AAAA,SAAA2C,gBAAArC,CAAA,IAAAqC,eAAA,GAAApB,MAAA,CAAAW,cAAA,GAAAX,MAAA,CAAAoC,cAAA,CAAAxB,IAAA,cAAAQ,gBAAArC,CAAA,WAAAA,CAAA,CAAA8B,SAAA,IAAAb,MAAA,CAAAoC,cAAA,CAAArD,CAAA,aAAAqC,eAAA,CAAArC,CAAA;AAAA,SAAAsD,gBAAAC,GAAA,EAAApF,GAAA,EAAAC,KAAA,IAAAD,GAAA,GAAAgD,cAAA,CAAAhD,GAAA,OAAAA,GAAA,IAAAoF,GAAA,IAAAtC,MAAA,CAAAC,cAAA,CAAAqC,GAAA,EAAApF,GAAA,IAAAC,KAAA,EAAAA,KAAA,EAAA0C,UAAA,QAAAC,YAAA,QAAAC,QAAA,oBAAAuC,GAAA,CAAApF,GAAA,IAAAC,KAAA,WAAAmF,GAAA;AAAA,SAAApC,eAAAqC,GAAA,QAAArF,GAAA,GAAAsF,YAAA,CAAAD,GAAA,oBAAAzD,OAAA,CAAA5B,GAAA,iBAAAA,GAAA,GAAAuF,MAAA,CAAAvF,GAAA;AAAA,SAAAsF,aAAAE,KAAA,EAAAC,IAAA,QAAA7D,OAAA,CAAA4D,KAAA,kBAAAA,KAAA,kBAAAA,KAAA,MAAAE,IAAA,GAAAF,KAAA,CAAA1D,MAAA,CAAA6D,WAAA,OAAAD,IAAA,KAAAE,SAAA,QAAAC,GAAA,GAAAH,IAAA,CAAAf,IAAA,CAAAa,KAAA,EAAAC,IAAA,oBAAA7D,OAAA,CAAAiE,GAAA,uBAAAA,GAAA,YAAAzD,SAAA,4DAAAqD,IAAA,gBAAAF,MAAA,GAAAO,MAAA,EAAAN,KAAA;AAAA,IAE3BO,QAAQ,GAAAlG,OAAA,CAAAmG,OAAA,0BAAAC,SAAA;EAAA9C,SAAA,CAAA4C,QAAA,EAAAE,SAAA;EAAA,IAAAC,MAAA,GAAAtC,YAAA,CAAAmC,QAAA;EACzB,SAAAA,SAAA,EAAc;IAAA,IAAAI,KAAA;IAAArG,eAAA,OAAAiG,QAAA;IACVI,KAAA,GAAAD,MAAA,CAAAvB,IAAA;IACAwB,KAAA,CAAKC,IAAI,GAAGC,QAAQ,CAACC,aAAa,CAAC,OAAO,CAAC;IAAC,OAAAH,KAAA;EAChD;;EAEA;EAAApG,YAAA,CAAAgG,QAAA;IAAA/F,GAAA;IAAAC,KAAA,EAmBA,SAAAC,OAAOC,KAAK,EAAEC,IAAI,EAAE;MAEhBmG,OAAO,CAACC,GAAG,6BAAAC,MAAA,CAA6BtG,KAAK,mBAAgBC,IAAI,CAAC;MAElE,IAAGD,KAAK,KAAK,aAAa,EAAE;QACxB,IAAI,CAACuG,WAAW,CAAC,CAAC;MACtB;MACA,IAAGvG,KAAK,KAAK,kBAAkB,EAAE;QAC7B,IAAI,CAACwG,gBAAgB,CAACvG,IAAI,CAAC;MAC/B;MACA,IAAGD,KAAK,KAAK,YAAY,EAAE;QACvB,IAAI,CAACuG,WAAW,CAAC,CAAC;QAClB,IAAI,CAACE,MAAM,CAACxG,IAAI,CAAC;MACrB;MACA,IAAGD,KAAK,KAAK,kBAAkB,EAAE;QAC7B,IAAI,CAAC0G,wBAAwB,CAACzG,IAAI,CAAC;MACvC;MACA,IAAGD,KAAK,KAAK,oBAAoB,EAAE;QAC/B,IAAI,CAAC2G,kBAAkB,CAAC,CAAC;MAC7B;IACJ;EAAC;IAAA9G,GAAA;IAAAC,KAAA;IAkBD;IACA,SAAA8G,mBAAmBC,aAAa,EAAEC,YAAY,EAAE;MAC5C,IAAMC,MAAM,GAAGb,QAAQ,CAACc,aAAa,CAAC,KAAK,CAAC;MAE5C,IAAI,OAAOF,YAAY,KAAK,UAAU,EAAE;QACpCA,YAAY,CAACC,MAAM,EAAE,IAAI,CAAC;MAC9B;MAEAF,aAAa,CAACI,WAAW,CAACF,MAAM,CAAC;IACrC;EAAC;IAAAlH,GAAA;IAAAC,KAAA,EAED,SAAAoH,aAAaC,IAAI,EAAE;MACf;MACA,IAAI,CAAClB,IAAI,CAACmB,SAAS,GAAG,EAAE;;MAExB;MACA,IAAMC,QAAQ,GAAGC,IAAI,CAACC,GAAG,CACrB,GAAG,EACHD,IAAI,CAACE,GAAG,CAAC,GAAG,EAAEC,MAAM,CAACC,UAAU,GAAG,EAAE,CACxC,CAAC;MACD,IAAMC,QAAQ,GAAGN,QAAQ,GAAGF,IAAI;MAEhC,IAAI,CAAClB,IAAI,CAAC2B,KAAK,CAACC,KAAK,MAAAvB,MAAA,CAAMe,QAAQ,OAAI;MACvC,IAAI,CAACpB,IAAI,CAAC2B,KAAK,CAACE,MAAM,MAAAxB,MAAA,CAAMe,QAAQ,OAAI;;MAExC;MACA,IAAI,CAACpB,IAAI,CAAC2B,KAAK,CAACG,mBAAmB,aAAAzB,MAAA,CAAaa,IAAI,WAAQ;MAE5D,KAAK,IAAI9E,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAAiF,IAAA,CAAAU,GAAA,CAAGb,IAAI,EAAI,CAAC,GAAE9E,CAAC,EAAE,EAAE;QAChC,IAAM4F,IAAI,GAAG/B,QAAQ,CAACc,aAAa,CAAC,KAAK,CAAC;QAC1CiB,IAAI,CAACC,SAAS,CAACC,GAAG,CAACvC,QAAQ,CAACwC,UAAU,CAAC;QAEvCH,IAAI,CAACL,KAAK,CAACC,KAAK,MAAAvB,MAAA,CAAMqB,QAAQ,OAAI;QAClCM,IAAI,CAACL,KAAK,CAACE,MAAM,MAAAxB,MAAA,CAAMqB,QAAQ,OAAI;QAEnCM,IAAI,CAACI,OAAO,CAACC,CAAC,GAAGjG,CAAC,GAAG8E,IAAI;QACzBc,IAAI,CAACI,OAAO,CAACE,CAAC,GAAGjB,IAAI,CAACkB,KAAK,CAACnG,CAAC,GAAG8E,IAAI,CAAC;QAErC,IAAMsB,kBAAkB,GAAGvC,QAAQ,CAACc,aAAa,CAAC,KAAK,CAAC;QACxDyB,kBAAkB,CAACP,SAAS,CAACC,GAAG,CAACvC,QAAQ,CAAC8C,0BAA0B,CAAC;QACrED,kBAAkB,CAACE,WAAW,GAAG,EAAE;QACnCV,IAAI,CAAChB,WAAW,CAACwB,kBAAkB,CAAC;QAEpC,IAAI,CAACxC,IAAI,CAACgB,WAAW,CAACgB,IAAI,CAAC;MAC/B;MAEA,IAAMW,gBAAgB,GAAG1C,QAAQ,CAACC,aAAa,KAAAG,MAAA,CAAKV,QAAQ,CAACiD,oBAAoB,OAAAvC,MAAA,CAAIV,QAAQ,CAACkD,cAAc,CAAE,CAAC;MAC/G,IAAMC,mBAAmB,GAAG7C,QAAQ,CAACC,aAAa,KAAAG,MAAA,CAAKV,QAAQ,CAACiD,oBAAoB,OAAAvC,MAAA,CAAIV,QAAQ,CAACoD,iBAAiB,CAAE,CAAC;MACrH,IAAMC,iBAAiB,GAAG/C,QAAQ,CAACC,aAAa,KAAAG,MAAA,CAAKV,QAAQ,CAACiD,oBAAoB,OAAAvC,MAAA,CAAIV,QAAQ,CAACsD,eAAe,CAAE,CAAC;MACjH,IAAMC,kBAAkB,GAAGjD,QAAQ,CAACC,aAAa,KAAAG,MAAA,CAAKV,QAAQ,CAACiD,oBAAoB,OAAAvC,MAAA,CAAIV,QAAQ,CAACwD,gBAAgB,CAAE,CAAC;MAEnH,IAAMC,cAAc,GAAG,CACnBT,gBAAgB,EAChBG,mBAAmB,EACnBE,iBAAiB,EACjBE,kBAAkB,CACrB;MAED,IAAMG,YAAY,GAAGjC,QAAQ;MAC7B,IAAMkC,aAAa,GAAG,QAAQ;MAE9BX,gBAAgB,CAAChB,KAAK,CAACC,KAAK,GAAGyB,YAAY;MAC3CV,gBAAgB,CAAChB,KAAK,CAACE,MAAM,GAAGyB,aAAa;MAE7CR,mBAAmB,CAACnB,KAAK,CAACC,KAAK,GAAGyB,YAAY;MAC9CP,mBAAmB,CAACnB,KAAK,CAACE,MAAM,GAAGyB,aAAa;MAEhDN,iBAAiB,CAACrB,KAAK,CAACC,KAAK,GAAG0B,aAAa;MAC7CN,iBAAiB,CAACrB,KAAK,CAACE,MAAM,GAAGwB,YAAY;MAE7CH,kBAAkB,CAACvB,KAAK,CAACC,KAAK,GAAG0B,aAAa;MAC9CJ,kBAAkB,CAACvB,KAAK,CAACE,MAAM,GAAGwB,YAAY;MAE9CD,cAAc,CAACG,OAAO,CAAC,UAAAC,SAAS,EAAI;QAChC,KAAI,IAAIpH,EAAC,GAAG,CAAC,EAAEA,EAAC,GAAG8E,IAAI,EAAE9E,EAAC,EAAE,EAAE;UAC1B,IAAMqH,QAAQ,GAAGxD,QAAQ,CAACc,aAAa,CAAC,KAAK,CAAC;UAC9C0C,QAAQ,CAACxB,SAAS,CAACC,GAAG,CAACvC,QAAQ,CAAC+D,eAAe,CAAC;UAChDD,QAAQ,CAACrB,OAAO,CAAC5H,KAAK,GAAG4B,EAAC;UAE1B,IACIoH,SAAS,CAACvB,SAAS,CAAC0B,QAAQ,CAAChE,QAAQ,CAACkD,cAAc,CAAC,IACrDW,SAAS,CAACvB,SAAS,CAAC0B,QAAQ,CAAChE,QAAQ,CAACoD,iBAAiB,CAAC,EAC1D;YACEU,QAAQ,CAAC9B,KAAK,CAACC,KAAK,MAAAvB,MAAA,CAAMqB,QAAQ,OAAI;YACtC+B,QAAQ,CAAC9B,KAAK,CAACE,MAAM,GAAGyB,aAAa;UACzC,CAAC,MAAM;YACHG,QAAQ,CAAC9B,KAAK,CAACC,KAAK,GAAG0B,aAAa;YACpCG,QAAQ,CAAC9B,KAAK,CAACE,MAAM,MAAAxB,MAAA,CAAMqB,QAAQ,OAAI;UAC3C;UAEA8B,SAAS,CAACxC,WAAW,CAACyC,QAAQ,CAAC;QACnC;MACJ,CAAC,CAAC;IACN;EAAC;IAAA7J,GAAA;IAAAC,KAAA,EAED,SAAA2G,OAAOwB,IAAI,EAAE;MACTA,IAAI,CAACC,SAAS,CAACC,GAAG,CAACvC,QAAQ,CAACiE,mBAAmB,CAAC;MAChD;MACA;IACJ;EAAC;IAAAhK,GAAA;IAAAC,KAAA,EAED,SAAAgK,SAAS7B,IAAI,EAAE;MACXA,IAAI,CAACC,SAAS,CAAC6B,MAAM,CAACnE,QAAQ,CAACiE,mBAAmB,CAAC;IACvD;EAAC;IAAAhK,GAAA;IAAAC,KAAA,EAED,SAAAyG,YAAA,EAAc;MAAA,IAAAyD,MAAA;MACV,IAAMC,KAAK,GAAG/D,QAAQ,CAACgE,gBAAgB,CAACtE,QAAQ,CAACuE,sBAAsB,CAAC;MACxEF,KAAK,CAACT,OAAO,CAAC,UAACvB,IAAI;QAAA,OAAK+B,MAAI,CAACF,QAAQ,CAAC7B,IAAI,CAAC;MAAA,EAAC;IAChD;EAAC;IAAApI,GAAA;IAAAC,KAAA,EAED,SAAA0G,iBAAiByB,IAAI,EAAE;MACnBA,IAAI,CAACC,SAAS,CAACkC,MAAM,CAACxE,QAAQ,CAACiE,mBAAmB,CAAC;IACvD;EAAC;IAAAhK,GAAA;IAAAC,KAAA,EAED,SAAA4G,yBAAyB5G,KAAK,EAAE;MAC5B,IAAMuK,aAAa,GAAGnE,QAAQ,CAACgE,gBAAgB,CAACtE,QAAQ,CAACuE,sBAAsB,CAAC;MAChF,IAAMG,YAAY,GAAG,EAAE;MAEvBD,aAAa,CAACb,OAAO,CAAC,UAAAvB,IAAI,EAAI;QAC1B,IAAIA,IAAI,CAACC,SAAS,CAAC0B,QAAQ,CAAChE,QAAQ,CAAC2E,gBAAgB,CAAC,EAAE;QACxDtC,IAAI,CAAC9B,aAAa,KAAAG,MAAA,CAAKV,QAAQ,CAAC8C,0BAA0B,CAAE,CAAC,CAACC,WAAW,GAAG7I,KAAK;MACrF,CAAC,CAAC;IACN;EAAC;IAAAD,GAAA;IAAAC,KAAA,EAED,SAAA6G,mBAAA,EAAqB;MACjB,IAAM0D,aAAa,GAAGnE,QAAQ,CAACgE,gBAAgB,CAACtE,QAAQ,CAACuE,sBAAsB,CAAC;MAChF,IAAMG,YAAY,GAAG,EAAE;MAEvBD,aAAa,CAACb,OAAO,CAAC,UAAAvB,IAAI,EAAI;QAC1BA,IAAI,CAAC9B,aAAa,KAAAG,MAAA,CAAKV,QAAQ,CAAC8C,0BAA0B,CAAE,CAAC,CAACC,WAAW,GAAG,EAAE;MAClF,CAAC,CAAC;IACN;EAAC;IAAA9I,GAAA;IAAAC,KAAA,EAED,SAAA0K,oBAAoBlC,CAAC,EAAEC,CAAC,EAAEzI,KAAK,EAAE;MAC7B,IAAGA,KAAK,IAAIA,KAAK,GAAG,CAAC,EAAE;QACnB,IAAMmI,IAAI,GAAG/B,QAAQ,CAACC,aAAa,aAAAG,MAAA,CAAagC,CAAC,iBAAAhC,MAAA,CAAciC,CAAC,OAAI,CAAC;QACrEN,IAAI,CAAC9B,aAAa,KAAAG,MAAA,CAAKV,QAAQ,CAAC8C,0BAA0B,CAAE,CAAC,CAACC,WAAW,GAAG7I,KAAK;QACjF,IAAI,CAAC2K,cAAc,CAACxC,IAAI,CAAC;MAC7B;IACJ;EAAC;IAAApI,GAAA;IAAAC,KAAA,EAED,SAAA4K,cAAcC,qBAAqB,EAAEC,eAAe,EAAE;MAClD,IAAMC,qBAAqB,GAAG3E,QAAQ,CAACC,aAAa,KAAAG,MAAA,CAAKV,QAAQ,CAACiD,oBAAoB,OAAAvC,MAAA,CAAIqE,qBAAqB,CAAE,CAAC;MAElH,KAAI,IAAItI,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGuI,eAAe,CAACtI,MAAM,EAAED,CAAC,EAAE,EAAE;QAC5C,IAAI,CAACuI,eAAe,CAACvI,CAAC,CAAC,IAAIuI,eAAe,CAACvI,CAAC,CAAC,IAAI,CAAC,EAAE;QACpD,IAAMqH,QAAQ,GAAGmB,qBAAqB,CAAC1E,aAAa,iBAAAG,MAAA,CAAiBjE,CAAC,OAAI,CAAC;QAC3EqH,QAAQ,CAACf,WAAW,GAAGiC,eAAe,CAACvI,CAAC,CAAC;MAC7C;IACJ;EAAC;IAAAxC,GAAA;IAAAC,KAAA,EAED,SAAA2K,eAAexC,IAAI,EAAE;MACjBA,IAAI,CAACC,SAAS,CAACC,GAAG,CAACvC,QAAQ,CAAC2E,gBAAgB,CAAC;IACjD;EAAC;IAAA1K,GAAA;IAAAC,KAAA,EAED,SAAAgL,eAAe7C,IAAI,EAAE;MACjBA,IAAI,CAACC,SAAS,CAACC,GAAG,CAAC,OAAO,CAAC;IAC/B;EAAC;IAAAtI,GAAA;IAAAC,KAAA,EAED,SAAAiL,uBAAuBC,QAAQ,EAAEvK,KAAK,EAAE;MACpC,IAAMwK,IAAI,GAAG/E,QAAQ,CAACC,aAAa,oBAAAG,MAAA,CAAoB0E,QAAQ,mBAAA1E,MAAA,CAAgB7F,KAAK,OAAI,CAAC;IAC7F;EAAC;IAAAZ,GAAA;IAAAC,KAAA,EAjLD,SAAAoL,oBAAA,EAA6B;MACzB,IAAMjB,KAAK,GAAG,EAAE;MAEhB,IAAMI,aAAa,GAAGnE,QAAQ,CAACgE,gBAAgB,CAACtE,QAAQ,CAACuE,sBAAsB,CAAC;MAEhFE,aAAa,CAACb,OAAO,CAAC,UAAAvB,IAAI,EAAI;QAC1BgC,KAAK,CAAC1J,IAAI,CAAC;UACP+H,CAAC,EAAEL,IAAI,CAACI,OAAO,CAACC,CAAC;UACjBC,CAAC,EAAEN,IAAI,CAACI,OAAO,CAACE;QACpB,CAAC,CAAC;MACN,CAAC,CAAC;MACFnC,OAAO,CAACC,GAAG,oBAAoB4D,KAAK,CAAC;MAErC,OAAOA,KAAK;IAChB;EAAC;EAAA,OAAArE,QAAA;AAAA,EA7DiCnG,mBAAQ;AAAA+B,MAAA,GAAzBoE,QAAQ;AAAAZ,eAAA,CAARY,QAAQ,gBAOL,MAAM;AAAAZ,eAAA,CAPTY,QAAQ,gBASL,MAAM;AAAAZ,eAAA,CATTY,QAAQ,yBAUI,UAAU;AAAAZ,eAAA,CAVtBY,QAAQ,sBAWC,OAAO;AAAAZ,eAAA,CAXhBY,QAAQ,iBAYJ,OAAO;AAAAZ,eAAA,CAZXY,QAAQ,gCAAAU,MAAA,CAaWV,MAAQ,CAACwC,UAAU,OAAA9B,MAAA,CAAIV,MAAQ,CAACiE,mBAAmB;AAAA7E,eAAA,CAbtEY,QAAQ,6BAAAU,MAAA,CAcQV,MAAQ,CAACwC,UAAU,OAAA9B,MAAA,CAAIV,MAAQ,CAAC2E,gBAAgB;AAAAvF,eAAA,CAdhEY,QAAQ,gCAgBW,sBAAsB;AAAAZ,eAAA,CAhBzCY,QAAQ,0BAkBK,gBAAgB;AAAAZ,eAAA,CAlB7BY,QAAQ,qBAmBA,WAAW;AAAAZ,eAAA,CAnBnBY,QAAQ,oBAoBD,KAAK;AAAAZ,eAAA,CApBZY,QAAQ,uBAqBE,QAAQ;AAAAZ,eAAA,CArBlBY,QAAQ,qBAsBA,MAAM;AAAAZ,eAAA,CAtBdY,QAAQ,sBAuBC,OAAO;;;;;;;;ACzB9B,SAASuF,YAAYA,CAACC,EAAE,EAAEC,GAAG,EAAE;EACpC,OAAO,CAACD,EAAE,GAAGA,EAAE,CAACvE,aAAa,KAAK,CAAE,CAACuE,EAAE,CAACE,OAAO,IAAIF,EAAE,CAACG,eAAe,EAAE/G,IAAI,CAAC4G,EAAE,EAAEC,GAAG,CAAE,CAAC;EACtF,OAAOD,EAAE;AACX;;;;;;;;ACHA,IAAAI,SAAA,GAAAC,sBAAA,CAAAlK,OAAA;AACA,IAAAuE,SAAA,GAAAvE,OAAA;AACA,IAAAmK,OAAA,GAAAnK,OAAA;AAAoD,SAAAkK,uBAAAxG,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAA0G,UAAA,GAAA1G,GAAA,KAAAY,OAAA,EAAAZ,GAAA;AAAA,SAAAxD,QAAAC,CAAA,sCAAAD,OAAA,wBAAAE,MAAA,uBAAAA,MAAA,CAAAC,QAAA,aAAAF,CAAA,kBAAAA,CAAA,gBAAAA,CAAA,WAAAA,CAAA,yBAAAC,MAAA,IAAAD,CAAA,CAAAG,WAAA,KAAAF,MAAA,IAAAD,CAAA,KAAAC,MAAA,CAAAG,SAAA,qBAAAJ,CAAA,KAAAD,OAAA,CAAAC,CAAA;AAAA,SAAA/B,gBAAAoC,QAAA,EAAAC,WAAA,UAAAD,QAAA,YAAAC,WAAA,eAAAC,SAAA;AAAA,SAAAC,kBAAAC,MAAA,EAAAC,KAAA,aAAAC,CAAA,MAAAA,CAAA,GAAAD,KAAA,CAAAE,MAAA,EAAAD,CAAA,UAAAE,UAAA,GAAAH,KAAA,CAAAC,CAAA,GAAAE,UAAA,CAAAC,UAAA,GAAAD,UAAA,CAAAC,UAAA,WAAAD,UAAA,CAAAE,YAAA,wBAAAF,UAAA,EAAAA,UAAA,CAAAG,QAAA,SAAAC,MAAA,CAAAC,cAAA,CAAAT,MAAA,EAAAU,cAAA,CAAAN,UAAA,CAAA1C,GAAA,GAAA0C,UAAA;AAAA,SAAA3C,aAAAoC,WAAA,EAAAc,UAAA,EAAAC,WAAA,QAAAD,UAAA,EAAAZ,iBAAA,CAAAF,WAAA,CAAAF,SAAA,EAAAgB,UAAA,OAAAC,WAAA,EAAAb,iBAAA,CAAAF,WAAA,EAAAe,WAAA,GAAAJ,MAAA,CAAAC,cAAA,CAAAZ,WAAA,iBAAAU,QAAA,mBAAAV,WAAA;AAAA,SAAAa,eAAAqC,GAAA,QAAArF,GAAA,GAAAsF,YAAA,CAAAD,GAAA,oBAAAzD,OAAA,CAAA5B,GAAA,iBAAAA,GAAA,GAAAuF,MAAA,CAAAvF,GAAA;AAAA,SAAAsF,aAAAE,KAAA,EAAAC,IAAA,QAAA7D,OAAA,CAAA4D,KAAA,kBAAAA,KAAA,kBAAAA,KAAA,MAAAE,IAAA,GAAAF,KAAA,CAAA1D,MAAA,CAAA6D,WAAA,OAAAD,IAAA,KAAAE,SAAA,QAAAC,GAAA,GAAAH,IAAA,CAAAf,IAAA,CAAAa,KAAA,EAAAC,IAAA,oBAAA7D,OAAA,CAAAiE,GAAA,uBAAAA,GAAA,YAAAzD,SAAA,4DAAAqD,IAAA,gBAAAF,MAAA,GAAAO,MAAA,EAAAN,KAAA;AAAA,SAAArC,UAAAC,QAAA,EAAAC,UAAA,eAAAA,UAAA,mBAAAA,UAAA,uBAAAjB,SAAA,0DAAAgB,QAAA,CAAAnB,SAAA,GAAAa,MAAA,CAAAQ,MAAA,CAAAD,UAAA,IAAAA,UAAA,CAAApB,SAAA,IAAAD,WAAA,IAAA/B,KAAA,EAAAmD,QAAA,EAAAP,QAAA,QAAAD,YAAA,aAAAE,MAAA,CAAAC,cAAA,CAAAK,QAAA,iBAAAP,QAAA,gBAAAQ,UAAA,EAAAE,eAAA,CAAAH,QAAA,EAAAC,UAAA;AAAA,SAAAE,gBAAA1B,CAAA,EAAA2B,CAAA,IAAAD,eAAA,GAAAT,MAAA,CAAAW,cAAA,GAAAX,MAAA,CAAAW,cAAA,CAAAC,IAAA,cAAAH,gBAAA1B,CAAA,EAAA2B,CAAA,IAAA3B,CAAA,CAAA8B,SAAA,GAAAH,CAAA,SAAA3B,CAAA,YAAA0B,eAAA,CAAA1B,CAAA,EAAA2B,CAAA;AAAA,SAAAI,aAAAC,OAAA,QAAAC,yBAAA,GAAAC,yBAAA,oBAAAC,qBAAA,QAAAC,KAAA,GAAAC,eAAA,CAAAL,OAAA,GAAAM,MAAA,MAAAL,yBAAA,QAAAM,SAAA,GAAAF,eAAA,OAAAlC,WAAA,EAAAmC,MAAA,GAAAE,OAAA,CAAAC,SAAA,CAAAL,KAAA,EAAAM,SAAA,EAAAH,SAAA,YAAAD,MAAA,GAAAF,KAAA,CAAAO,KAAA,OAAAD,SAAA,YAAAE,0BAAA,OAAAN,MAAA;AAAA,SAAAM,2BAAAC,IAAA,EAAAC,IAAA,QAAAA,IAAA,KAAA/C,OAAA,CAAA+C,IAAA,yBAAAA,IAAA,2BAAAA,IAAA,aAAAA,IAAA,yBAAAvC,SAAA,uEAAAwC,sBAAA,CAAAF,IAAA;AAAA,SAAAE,uBAAAF,IAAA,QAAAA,IAAA,yBAAAG,cAAA,wEAAAH,IAAA;AAAA,SAAAX,0BAAA,eAAAM,OAAA,qBAAAA,OAAA,CAAAC,SAAA,oBAAAD,OAAA,CAAAC,SAAA,CAAAQ,IAAA,2BAAAC,KAAA,oCAAAC,OAAA,CAAA/C,SAAA,CAAAgD,OAAA,CAAAN,IAAA,CAAAN,OAAA,CAAAC,SAAA,CAAAU,OAAA,8CAAAzD,CAAA;AAAA,SAAA2C,gBAAArC,CAAA,IAAAqC,eAAA,GAAApB,MAAA,CAAAW,cAAA,GAAAX,MAAA,CAAAoC,cAAA,CAAAxB,IAAA,cAAAQ,gBAAArC,CAAA,WAAAA,CAAA,CAAA8B,SAAA,IAAAb,MAAA,CAAAoC,cAAA,CAAArD,CAAA,aAAAqC,eAAA,CAAArC,CAAA;AAAA,IAE/BkK,YAAY,GAAAlM,OAAA,CAAAmG,OAAA,0BAAAgG,WAAA;EAAA7I,SAAA,CAAA4I,YAAA,EAAAC,WAAA;EAAA,IAAA9F,MAAA,GAAAtC,YAAA,CAAAmI,YAAA;EAC7B,SAAAA,aAAA,EAAc;IAAA,IAAA5F,KAAA;IAAArG,eAAA,OAAAiM,YAAA;IACV5F,KAAA,GAAAD,MAAA,CAAAvB,IAAA;IACAwB,KAAA,CAAK8F,YAAY,GAAG,KAAK;IACzB9F,KAAA,CAAK+F,OAAO,GAAG,CAAC;IAChB/F,KAAA,CAAK1F,SAAS,GAAG,EAAE;IAAC,OAAA0F,KAAA;EACxB;EAACpG,YAAA,CAAAgM,YAAA;IAAA/L,GAAA;IAAAC,KAAA,EAED,SAAAkM,+BAAA,EAAiC;MAAA,IAAAhC,MAAA;MAC7B9D,QAAQ,CAAC+F,gBAAgB,CAAC,SAAS,EAAE,UAACjM,KAAK,EAAK;QAC5C,IAAIA,KAAK,CAACH,GAAG,KAAK,OAAO,EAAE;UACvBmK,MAAI,CAAC8B,YAAY,GAAG,IAAI;QAC5B;MACJ,CAAC,CAAC;MAEF5F,QAAQ,CAAC+F,gBAAgB,CAAC,OAAO,EAAE,UAACjM,KAAK,EAAK;QAC1C,IAAIA,KAAK,CAACH,GAAG,KAAK,OAAO,EAAE;UACvBmK,MAAI,CAAC8B,YAAY,GAAG,KAAK;QAC7B;MACJ,CAAC,CAAC;MAEF5F,QAAQ,CAAC+F,gBAAgB,CAAC,OAAO,EAAE,UAACjM,KAAK,EAAK;QAC1C,IAAIA,KAAK,CAACH,GAAG,KAAK,QAAQ,EAAE;UACxBmK,MAAI,CAACpJ,eAAe,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC;QAC3C;MACJ,CAAC,CAAC;MAEFsF,QAAQ,CAAC+F,gBAAgB,CAAC,SAAS,EAAE,UAACjM,KAAK;QAAA,OAAKgK,MAAI,CAACkC,cAAc,CAAClM,KAAK,CAAC;MAAA,EAAC;IAC/E;EAAC;IAAAH,GAAA;IAAAC,KAAA,EAED,SAAAqM,WAAW9E,QAAQ,EAAE;MACjB,IAAI,CAAC0E,OAAO,GAAG1E,QAAQ;IAC3B;EAAC;IAAAxH,GAAA;IAAAC,KAAA,EAED,SAAAsM,6BAAA,EAA+B;MAAA,IAAAC,MAAA;MAC3B,IAAMpG,IAAI,GAAGC,QAAQ,CAACC,aAAa,KAAAG,MAAA,CAAKV,iBAAQ,CAAC0G,UAAU,CAAE,CAAC;MAC9DrG,IAAI,CAACgG,gBAAgB,CAAC,OAAO,EAAE,UAACjM,KAAK;QAAA,OAAKqM,MAAI,CAACE,eAAe,CAACvM,KAAK,CAAC;MAAA,EAAC;IAC1E;EAAC;IAAAH,GAAA;IAAAC,KAAA,EAED,SAAAyM,gBAAgBvM,KAAK,EAAE;MACnB,IAAMwM,WAAW,GAAG,IAAArB,oBAAY,EAACnL,KAAK,CAACmC,MAAM,EAAE,OAAO,CAAC;MACvDiE,OAAO,CAACC,GAAG,cAAcmG,WAAW,CAAC;MAErC,IAAG,IAAI,CAACV,YAAY,EAAE;QAClB,IAAI,CAAClL,eAAe,CAAC,kBAAkB,EAAE4L,WAAW,CAAC;MACzD,CAAC,MAAM;QACH,IAAI,CAAC5L,eAAe,CAAC,YAAY,EAAE4L,WAAW,CAAC;MACnD;IAEJ;EAAC;IAAA3M,GAAA;IAAAC,KAAA,EAED,SAAAoM,eAAelM,KAAK,EAAE;MAClB,IAAMyM,UAAU,GAAGzM,KAAK,CAACH,GAAG;MAC5B,IAAIwK,aAAa,GAAG,EAAE;MAEtB,IAAG,CAACqC,KAAK,CAACD,UAAU,CAAC,EAAE;QACnB,IAAME,GAAG,GAAGC,QAAQ,CAACH,UAAU,EAAE,EAAE,CAAC;QACpC,IAAGE,GAAG,GAAG,CAAC,IAAIA,GAAG,IAAI,IAAI,CAACZ,OAAO,EAAE;UAC/B1B,aAAa,GAAGzE,iBAAQ,CAACsF,mBAAmB,CAAC,CAAC;UAC9C,IAAI,CAACtK,eAAe,CAAC,kBAAkB,EAAE+L,GAAG,CAAC;UAC7C,IAAI,CAAC/L,eAAe,CAChB,sBAAsB,EACtByJ,aAAa,CAACwC,GAAG,CAAC,UAAA5E,IAAI;YAAA,OAAK;cAACK,CAAC,EAAEL,IAAI,CAACK,CAAC;cAAEC,CAAC,EAAEN,IAAI,CAACM,CAAC;cAAEzI,KAAK,EAAE6M;YAAG,CAAC;UAAA,CAAC,CAClE,CAAC;QACL;MACJ;MAEA,IAAGF,UAAU,KAAK,QAAQ,IAAIA,UAAU,KAAK,WAAW,EAAE;QACtDpC,aAAa,GAAGzE,iBAAQ,CAACsF,mBAAmB,CAAC,CAAC;QAC9C,IAAI,CAACtK,eAAe,CAAC,oBAAoB,EAAE,CAAC,CAAC,CAAC;QAC9C,IAAI,CAACA,eAAe,CAChB,kBAAkB,EAClByJ,aAAa,CAACwC,GAAG,CAAC,UAAA5E,IAAI;UAAA,OAAK;YAACK,CAAC,EAAEL,IAAI,CAACK,CAAC;YAAEC,CAAC,EAAEN,IAAI,CAACM,CAAC;YAAEzI,KAAK,EAAE;UAAC,CAAC;QAAA,CAAC,CAChE,CAAC;MACL;IAGJ;EAAC;EAAA,OAAA8L,YAAA;AAAA,EA7EqCzL,oBAAU;;;;;;;;ACJpD,IAAAmB,UAAA,GAAAC,OAAA;AAAgD,SAAAE,QAAAC,CAAA,sCAAAD,OAAA,wBAAAE,MAAA,uBAAAA,MAAA,CAAAC,QAAA,aAAAF,CAAA,kBAAAA,CAAA,gBAAAA,CAAA,WAAAA,CAAA,yBAAAC,MAAA,IAAAD,CAAA,CAAAG,WAAA,KAAAF,MAAA,IAAAD,CAAA,KAAAC,MAAA,CAAAG,SAAA,qBAAAJ,CAAA,KAAAD,OAAA,CAAAC,CAAA;AAAA,SAAAZ,2BAAAY,CAAA,EAAAoL,cAAA,QAAAC,EAAA,UAAApL,MAAA,oBAAAD,CAAA,CAAAC,MAAA,CAAAC,QAAA,KAAAF,CAAA,qBAAAqL,EAAA,QAAAC,KAAA,CAAAC,OAAA,CAAAvL,CAAA,MAAAqL,EAAA,GAAAG,2BAAA,CAAAxL,CAAA,MAAAoL,cAAA,IAAApL,CAAA,WAAAA,CAAA,CAAAY,MAAA,qBAAAyK,EAAA,EAAArL,CAAA,GAAAqL,EAAA,MAAA1K,CAAA,UAAA8K,CAAA,YAAAA,EAAA,eAAAnM,CAAA,EAAAmM,CAAA,EAAAlM,CAAA,WAAAA,EAAA,QAAAoB,CAAA,IAAAX,CAAA,CAAAY,MAAA,WAAApB,IAAA,mBAAAA,IAAA,SAAApB,KAAA,EAAA4B,CAAA,CAAAW,CAAA,UAAAjB,CAAA,WAAAA,EAAAgM,EAAA,UAAAA,EAAA,KAAA/L,CAAA,EAAA8L,CAAA,gBAAAlL,SAAA,iJAAAoL,gBAAA,SAAAC,MAAA,UAAAnM,GAAA,WAAAH,CAAA,WAAAA,EAAA,IAAA+L,EAAA,GAAAA,EAAA,CAAAvI,IAAA,CAAA9C,CAAA,MAAAT,CAAA,WAAAA,EAAA,QAAAsM,IAAA,GAAAR,EAAA,CAAAS,IAAA,IAAAH,gBAAA,GAAAE,IAAA,CAAArM,IAAA,SAAAqM,IAAA,KAAAnM,CAAA,WAAAA,EAAAqM,GAAA,IAAAH,MAAA,SAAAnM,GAAA,GAAAsM,GAAA,KAAApM,CAAA,WAAAA,EAAA,eAAAgM,gBAAA,IAAAN,EAAA,CAAAW,MAAA,UAAAX,EAAA,CAAAW,MAAA,oBAAAJ,MAAA,QAAAnM,GAAA;AAAA,SAAA+L,4BAAAxL,CAAA,EAAAiM,MAAA,SAAAjM,CAAA,qBAAAA,CAAA,sBAAAkM,iBAAA,CAAAlM,CAAA,EAAAiM,MAAA,OAAA1M,CAAA,GAAA0B,MAAA,CAAAb,SAAA,CAAA+L,QAAA,CAAArJ,IAAA,CAAA9C,CAAA,EAAAoM,KAAA,aAAA7M,CAAA,iBAAAS,CAAA,CAAAG,WAAA,EAAAZ,CAAA,GAAAS,CAAA,CAAAG,WAAA,CAAAkM,IAAA,MAAA9M,CAAA,cAAAA,CAAA,mBAAA+L,KAAA,CAAAgB,IAAA,CAAAtM,CAAA,OAAAT,CAAA,+DAAAgN,IAAA,CAAAhN,CAAA,UAAA2M,iBAAA,CAAAlM,CAAA,EAAAiM,MAAA;AAAA,SAAAC,kBAAAM,GAAA,EAAAC,GAAA,QAAAA,GAAA,YAAAA,GAAA,GAAAD,GAAA,CAAA5L,MAAA,EAAA6L,GAAA,GAAAD,GAAA,CAAA5L,MAAA,WAAAD,CAAA,MAAA+L,IAAA,OAAApB,KAAA,CAAAmB,GAAA,GAAA9L,CAAA,GAAA8L,GAAA,EAAA9L,CAAA,IAAA+L,IAAA,CAAA/L,CAAA,IAAA6L,GAAA,CAAA7L,CAAA,UAAA+L,IAAA;AAAA,SAAAzO,gBAAAoC,QAAA,EAAAC,WAAA,UAAAD,QAAA,YAAAC,WAAA,eAAAC,SAAA;AAAA,SAAAC,kBAAAC,MAAA,EAAAC,KAAA,aAAAC,CAAA,MAAAA,CAAA,GAAAD,KAAA,CAAAE,MAAA,EAAAD,CAAA,UAAAE,UAAA,GAAAH,KAAA,CAAAC,CAAA,GAAAE,UAAA,CAAAC,UAAA,GAAAD,UAAA,CAAAC,UAAA,WAAAD,UAAA,CAAAE,YAAA,wBAAAF,UAAA,EAAAA,UAAA,CAAAG,QAAA,SAAAC,MAAA,CAAAC,cAAA,CAAAT,MAAA,EAAAU,cAAA,CAAAN,UAAA,CAAA1C,GAAA,GAAA0C,UAAA;AAAA,SAAA3C,aAAAoC,WAAA,EAAAc,UAAA,EAAAC,WAAA,QAAAD,UAAA,EAAAZ,iBAAA,CAAAF,WAAA,CAAAF,SAAA,EAAAgB,UAAA,OAAAC,WAAA,EAAAb,iBAAA,CAAAF,WAAA,EAAAe,WAAA,GAAAJ,MAAA,CAAAC,cAAA,CAAAZ,WAAA,iBAAAU,QAAA,mBAAAV,WAAA;AAAA,SAAAa,eAAAqC,GAAA,QAAArF,GAAA,GAAAsF,YAAA,CAAAD,GAAA,oBAAAzD,OAAA,CAAA5B,GAAA,iBAAAA,GAAA,GAAAuF,MAAA,CAAAvF,GAAA;AAAA,SAAAsF,aAAAE,KAAA,EAAAC,IAAA,QAAA7D,OAAA,CAAA4D,KAAA,kBAAAA,KAAA,kBAAAA,KAAA,MAAAE,IAAA,GAAAF,KAAA,CAAA1D,MAAA,CAAA6D,WAAA,OAAAD,IAAA,KAAAE,SAAA,QAAAC,GAAA,GAAAH,IAAA,CAAAf,IAAA,CAAAa,KAAA,EAAAC,IAAA,oBAAA7D,OAAA,CAAAiE,GAAA,uBAAAA,GAAA,YAAAzD,SAAA,4DAAAqD,IAAA,gBAAAF,MAAA,GAAAO,MAAA,EAAAN,KAAA;AAAA,SAAArC,UAAAC,QAAA,EAAAC,UAAA,eAAAA,UAAA,mBAAAA,UAAA,uBAAAjB,SAAA,0DAAAgB,QAAA,CAAAnB,SAAA,GAAAa,MAAA,CAAAQ,MAAA,CAAAD,UAAA,IAAAA,UAAA,CAAApB,SAAA,IAAAD,WAAA,IAAA/B,KAAA,EAAAmD,QAAA,EAAAP,QAAA,QAAAD,YAAA,aAAAE,MAAA,CAAAC,cAAA,CAAAK,QAAA,iBAAAP,QAAA,gBAAAQ,UAAA,EAAAE,eAAA,CAAAH,QAAA,EAAAC,UAAA;AAAA,SAAAE,gBAAA1B,CAAA,EAAA2B,CAAA,IAAAD,eAAA,GAAAT,MAAA,CAAAW,cAAA,GAAAX,MAAA,CAAAW,cAAA,CAAAC,IAAA,cAAAH,gBAAA1B,CAAA,EAAA2B,CAAA,IAAA3B,CAAA,CAAA8B,SAAA,GAAAH,CAAA,SAAA3B,CAAA,YAAA0B,eAAA,CAAA1B,CAAA,EAAA2B,CAAA;AAAA,SAAAI,aAAAC,OAAA,QAAAC,yBAAA,GAAAC,yBAAA,oBAAAC,qBAAA,QAAAC,KAAA,GAAAC,eAAA,CAAAL,OAAA,GAAAM,MAAA,MAAAL,yBAAA,QAAAM,SAAA,GAAAF,eAAA,OAAAlC,WAAA,EAAAmC,MAAA,GAAAE,OAAA,CAAAC,SAAA,CAAAL,KAAA,EAAAM,SAAA,EAAAH,SAAA,YAAAD,MAAA,GAAAF,KAAA,CAAAO,KAAA,OAAAD,SAAA,YAAAE,0BAAA,OAAAN,MAAA;AAAA,SAAAM,2BAAAC,IAAA,EAAAC,IAAA,QAAAA,IAAA,KAAA/C,OAAA,CAAA+C,IAAA,yBAAAA,IAAA,2BAAAA,IAAA,aAAAA,IAAA,yBAAAvC,SAAA,uEAAAwC,sBAAA,CAAAF,IAAA;AAAA,SAAAE,uBAAAF,IAAA,QAAAA,IAAA,yBAAAG,cAAA,wEAAAH,IAAA;AAAA,SAAAX,0BAAA,eAAAM,OAAA,qBAAAA,OAAA,CAAAC,SAAA,oBAAAD,OAAA,CAAAC,SAAA,CAAAQ,IAAA,2BAAAC,KAAA,oCAAAC,OAAA,CAAA/C,SAAA,CAAAgD,OAAA,CAAAN,IAAA,CAAAN,OAAA,CAAAC,SAAA,CAAAU,OAAA,8CAAAzD,CAAA;AAAA,SAAA2C,gBAAArC,CAAA,IAAAqC,eAAA,GAAApB,MAAA,CAAAW,cAAA,GAAAX,MAAA,CAAAoC,cAAA,CAAAxB,IAAA,cAAAQ,gBAAArC,CAAA,WAAAA,CAAA,CAAA8B,SAAA,IAAAb,MAAA,CAAAoC,cAAA,CAAArD,CAAA,aAAAqC,eAAA,CAAArC,CAAA;AAAA,IAE3B2M,aAAa,GAAA3O,OAAA,CAAAmG,OAAA,0BAAAC,SAAA;EAAA9C,SAAA,CAAAqL,aAAA,EAAAvI,SAAA;EAAA,IAAAC,MAAA,GAAAtC,YAAA,CAAA4K,aAAA;EAC9B,SAAAA,cAAYC,QAAQ,EAAe;IAAA,IAAAtI,KAAA;IAAA,IAAbuI,MAAM,GAAAnK,SAAA,CAAA9B,MAAA,QAAA8B,SAAA,QAAAqB,SAAA,GAAArB,SAAA,MAAG,EAAE;IAAAzE,eAAA,OAAA0O,aAAA;IAC7BrI,KAAA,GAAAD,MAAA,CAAAvB,IAAA;IACAwB,KAAA,CAAKsI,QAAQ,GAAGA,QAAQ;IACxBtI,KAAA,CAAKuI,MAAM,GAAGA,MAAM;IAEpBvI,KAAA,CAAKwI,WAAW,GAAG,EAAE;IAAC,OAAAxI,KAAA;EAC1B;EAACpG,YAAA,CAAAyO,aAAA;IAAAxO,GAAA;IAAAC,KAAA,EAED,SAAAC,OAAOC,KAAK,EAAEsK,YAAY,EAAE;MAExBlE,OAAO,CAACC,GAAG,oBAAAC,MAAA,CAAoBtG,KAAK,mBAAgBsK,YAAY,CAAC;MAEjE,IAAGtK,KAAK,KAAK,sBAAsB,EAAE;QACjCoG,OAAO,CAACC,GAAG,wCAAwC,CAAC;QACpDD,OAAO,CAACC,GAAG,oBAAAC,MAAA,CAAoBgE,YAAY,CAAChI,MAAM,mBAAgB,CAAC;QAAA,IAAAzB,SAAA,GAAAC,0BAAA,CAEjDwJ,YAAY;UAAAvJ,KAAA;QAAA;UAA9B,KAAAF,SAAA,CAAAG,CAAA,MAAAD,KAAA,GAAAF,SAAA,CAAAI,CAAA,IAAAC,IAAA,GAAgC;YAAA,IAAtB+G,IAAI,GAAAlH,KAAA,CAAAjB,KAAA;YACV,IAAI,CAACyO,MAAM,CAACE,SAAS,CAACxG,IAAI,CAACK,CAAC,EAAEL,IAAI,CAACM,CAAC,EAAEN,IAAI,CAACnI,KAAK,CAAC;UACrD;QAAC,SAAAqB,GAAA;UAAAN,SAAA,CAAAO,CAAA,CAAAD,GAAA;QAAA;UAAAN,SAAA,CAAAQ,CAAA;QAAA;QACD+E,OAAO,CAACC,GAAG,qCAAAC,MAAA,CAAqC,IAAI,CAACiI,MAAM,CAACG,YAAY,CAAE,CAAC;QAE3E,IAAG,IAAI,CAACH,MAAM,CAACI,QAAQ,CAAC,CAAC,EAAE;UACvB,IAAI,CAACH,WAAW,GAAG,QAAQ;UAC3BpI,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;UAC/B,IAAG,IAAI,CAACkI,MAAM,CAACK,QAAQ,CAAC,CAAC,EAAE;YACvBxI,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;UACnC;QACJ,CAAC,MAAM;UACHD,OAAO,CAACC,GAAG,aAAa,IAAI,CAACkI,MAAM,CAACM,mBAAmB,CAACvE,YAAY,CAAC,CAAC;QAC1E;MACJ;MAEA,IAAGtK,KAAK,KAAK,kBAAkB,EAAE;QAC7BoG,OAAO,CAACC,GAAG,oCAAoC,CAAC;QAChDD,OAAO,CAACC,GAAG,oBAAAC,MAAA,CAAoBgE,YAAY,CAAChI,MAAM,mBAAgB,CAAC;QAAA,IAAAwM,UAAA,GAAAhO,0BAAA,CACjDwJ,YAAY;UAAAyE,MAAA;QAAA;UAA9B,KAAAD,UAAA,CAAA9N,CAAA,MAAA+N,MAAA,GAAAD,UAAA,CAAA7N,CAAA,IAAAC,IAAA,GAAgC;YAAA,IAAtB+G,KAAI,GAAA8G,MAAA,CAAAjP,KAAA;YACV,IAAI,CAACyO,MAAM,CAACE,SAAS,CAACxG,KAAI,CAACK,CAAC,EAAEL,KAAI,CAACM,CAAC,EAAE,CAAC,CAAC;UAC5C;QAAC,SAAApH,GAAA;UAAA2N,UAAA,CAAA1N,CAAA,CAAAD,GAAA;QAAA;UAAA2N,UAAA,CAAAzN,CAAA;QAAA;QACD+E,OAAO,CAACC,GAAG,qCAAAC,MAAA,CAAqC,IAAI,CAACiI,MAAM,CAACG,YAAY,CAAE,CAAC;MAC/E;IACJ;EAAC;IAAA7O,GAAA;IAAAC,KAAA,EAyBD,SAAAkP,UAAUT,MAAM,EAAE;MACd,IAAI,CAACA,MAAM,GAAGA,MAAM;MACpB,IAAI,CAACD,QAAQ,CAACpH,YAAY,CAACqH,MAAM,CAAClH,QAAQ,CAAC;;MAE3C;MACA,KAAI,IAAIhF,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGkM,MAAM,CAACU,WAAW,CAAC3M,MAAM,EAAED,CAAC,EAAE,EAAE;QAC/C,KAAI,IAAI6M,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGX,MAAM,CAACU,WAAW,CAAC5M,CAAC,CAAC,CAACC,MAAM,EAAE4M,CAAC,EAAE,EAAE;UAClD,IAAI,CAACZ,QAAQ,CAAC9D,mBAAmB,CAAC0E,CAAC,EAAE7M,CAAC,EAAEkM,MAAM,CAACU,WAAW,CAAC5M,CAAC,CAAC,CAAC6M,CAAC,CAAC,CAAC;QACrE;MACJ;MAEA,IAAI,CAACZ,QAAQ,CAAC5D,aAAa,CAAC,QAAQ,EAAE6D,MAAM,CAACY,WAAW,CAAC;MACzD,IAAI,CAACb,QAAQ,CAAC5D,aAAa,CAAC,KAAK,EAAE6D,MAAM,CAACa,QAAQ,CAAC;MACnD,IAAI,CAACd,QAAQ,CAAC5D,aAAa,CAAC,MAAM,EAAE6D,MAAM,CAACc,SAAS,CAAC;MACrD,IAAI,CAACf,QAAQ,CAAC5D,aAAa,CAAC,OAAO,EAAE6D,MAAM,CAACe,UAAU,CAAC;IAC3D;EAAC;EAAA,OAAAjB,aAAA;AAAA,EAjFsC5O,mBAAQ;;;;;;;;;;;;;;;;;;;;;ICF9B8P,MAAM,GAAA7P,OAAA,CAAAmG,OAAA;EACvB,SAAA0J,OAAAC,IAAA,EAOG;IAAA,IANCnI,QAAQ,GAAAmI,IAAA,CAARnI,QAAQ;MAAAoI,gBAAA,GAAAD,IAAA,CACRP,WAAW;MAAXA,WAAW,GAAAQ,gBAAA,cAAG,EAAE,GAAAA,gBAAA;MAAAC,aAAA,GAAAF,IAAA,CAChBJ,QAAQ;MAARA,QAAQ,GAAAM,aAAA,cAAG,EAAE,GAAAA,aAAA;MAAAC,gBAAA,GAAAH,IAAA,CACbL,WAAW;MAAXA,WAAW,GAAAQ,gBAAA,cAAG,EAAE,GAAAA,gBAAA;MAAAC,cAAA,GAAAJ,IAAA,CAChBH,SAAS;MAATA,SAAS,GAAAO,cAAA,cAAG,EAAE,GAAAA,cAAA;MAAAC,eAAA,GAAAL,IAAA,CACdF,UAAU;MAAVA,UAAU,GAAAO,eAAA,cAAG,EAAE,GAAAA,eAAA;IAAAlQ,eAAA,OAAA4P,MAAA;IAEf,IAAI,CAAClI,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAAC4H,WAAW,GAAGA,WAAW;IAC9B,IAAI,CAACG,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACD,WAAW,GAAGA,WAAW;IAC9B,IAAI,CAACE,SAAS,GAAGA,SAAS;IAC1B,IAAI,CAACC,UAAU,GAAGA,UAAU;IAE5B,IAAI,CAACZ,YAAY,GAAGO,WAAW,CAACpC,GAAG,CAAC,UAAAiD,GAAG;MAAA,OAAAC,kBAAA,CAAQD,GAAG;IAAA,CAAC,CAAC;IACpD,IAAI,CAACE,MAAM,GAAG,EAAE;EACpB;EAACpQ,YAAA,CAAA2P,MAAA;IAAA1P,GAAA;IAAAC,KAAA,EAED,SAAA2O,UAAUnG,CAAC,EAAEC,CAAC,EAAEzI,KAAK,EAAE;MACnBsG,OAAO,CAACC,GAAG,kCAAAC,MAAA,CAAkCgC,CAAC,OAAAhC,MAAA,CAAIiC,CAAC,UAAAjC,MAAA,CAAOxG,KAAK,CAAE,CAAC;MAClE,IAAI,IAAI,CAACmP,WAAW,CAAC1G,CAAC,CAAC,CAACD,CAAC,CAAC,EAAE;MAC5B,IAAI,CAACoG,YAAY,CAACnG,CAAC,CAAC,CAACD,CAAC,CAAC,GAAGxI,KAAK;IACnC;EAAC;IAAAD,GAAA;IAAAC,KAAA,EAED,SAAAmQ,SAAA,EAAW,CAEX;EAAC;IAAApQ,GAAA;IAAAC,KAAA,EAED,SAAA6O,SAAA,EAAW;MACP,KAAI,IAAItM,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACgF,QAAQ,EAAEhF,CAAC,EAAE,EAAE;QACnC,KAAI,IAAI6M,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAAC7H,QAAQ,EAAE6H,CAAC,EAAE,EAAE;UACnC,IAAG,IAAI,CAACR,YAAY,CAACQ,CAAC,CAAC,CAAC7M,CAAC,CAAC,GAAG,CAAC,EAAE,OAAO,KAAK;QAChD;MACJ;MACA,OAAO,IAAI;IACf;EAAC;IAAAxC,GAAA;IAAAC,KAAA,EAED,SAAA8O,SAAA,EAAW;MACP,KAAI,IAAIvM,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACgF,QAAQ,EAAEhF,CAAC,EAAE,EAAE;QACnC,IACI,IAAI,CAAC6N,eAAe,CAAC7N,CAAC,CAAC,CAACC,MAAM,GAAG,CAAC,IAClC,IAAI,CAAC6N,kBAAkB,CAAC9N,CAAC,CAAC,CAACC,MAAM,GAAG,CAAC,IACrC,CAAC,IAAI,CAAC8N,eAAe,CAAC,KAAK,EAAE/N,CAAC,EAAE,IAAI,CAAC+M,QAAQ,CAAC/M,CAAC,CAAC,CAAC,IACjD,CAAC,IAAI,CAAC+N,eAAe,CAAC,QAAQ,EAAE/N,CAAC,EAAE,IAAI,CAAC8M,WAAW,CAAC9M,CAAC,CAAC,CAAC,IACvD,CAAC,IAAI,CAAC+N,eAAe,CAAC,MAAM,EAAE/N,CAAC,EAAE,IAAI,CAACgN,SAAS,CAAChN,CAAC,CAAC,CAAC,IACnD,CAAC,IAAI,CAAC+N,eAAe,CAAC,OAAO,EAAE/N,CAAC,EAAE,IAAI,CAACiN,UAAU,CAACjN,CAAC,CAAC,CAAC,EACvD;UACE,OAAO,KAAK;QAChB;MACJ;MAEA,OAAO,IAAI;IACf;EAAC;IAAAxC,GAAA;IAAAC,KAAA,EAED,SAAAuQ,OAAA,EAAS,CAET;EAAC;IAAAxQ,GAAA;IAAAC,KAAA,EAED,SAAAwQ,SAASC,IAAI,EAAE,CAEf;EAAC;IAAA1Q,GAAA;IAAAC,KAAA,EAED,SAAA0Q,OAAOjI,CAAC,EAAE;MACN,OAAO,IAAI,CAACmG,YAAY,CAACnG,CAAC,CAAC;IAC/B;EAAC;IAAA1I,GAAA;IAAAC,KAAA,EAED,SAAA2Q,UAAUnI,CAAC,EAAE;MACT,OAAO,IAAI,CAACoG,YAAY,CAAC7B,GAAG,CAAC,UAAC/M,KAAK;QAAA,OAAKA,KAAK,CAACwI,CAAC,CAAC;MAAA,EAAC;IACrD;EAAC;IAAAzI,GAAA;IAAAC,KAAA,EAED,SAAA4Q,mBAAmBC,KAAK,EAAE;MACtB,IAAMC,YAAY,GAAG,IAAIC,GAAG,CAAC,CAAC;MAC9B,IAAMC,gBAAgB,GAAG,EAAE;MAE3B,KAAK,IAAIzO,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGsO,KAAK,CAACrO,MAAM,EAAED,CAAC,EAAE,EAAE;QACnC,IAAMvC,KAAK,GAAG6Q,KAAK,CAACtO,CAAC,CAAC;QAEtB,IAAIvC,KAAK,KAAK,CAAC,EAAE;QAEjB,IAAI8Q,YAAY,CAACG,GAAG,CAACjR,KAAK,CAAC,EAAE;UAC3BgR,gBAAgB,CAACvQ,IAAI,CAAC;YAAEE,KAAK,EAAE4B,CAAC;YAAEvC,KAAK,EAALA;UAAM,CAAC,CAAC;UAC1CgR,gBAAgB,CAACvQ,IAAI,CAAC;YAAEE,KAAK,EAAEmQ,YAAY,CAACI,GAAG,CAAClR,KAAK,CAAC;YAAEA,KAAK,EAALA;UAAM,CAAC,CAAC;QAClE,CAAC,MAAM;UACL8Q,YAAY,CAACK,GAAG,CAACnR,KAAK,EAAEuC,CAAC,CAAC;QAC5B;MACF;;MAEA;MACA,OAAO2K,KAAK,CAACgB,IAAI,CAAC,IAAIkD,GAAG,CAACJ,gBAAgB,CAAC,CAAC;IAClD;EAAC;IAAAjR,GAAA;IAAAC,KAAA,EAED,SAAAoQ,gBAAgB3H,CAAC,EAAE;MACf,IAAM4I,UAAU,GAAG,IAAI,CAACT,kBAAkB,CAAC,IAAI,CAACF,MAAM,CAACjI,CAAC,CAAC,CAAC;MAC1D,OAAO4I,UAAU,CAACtE,GAAG,CAAC,UAAAuE,GAAG;QAAA,OAAK;UAAE9I,CAAC,EAAE8I,GAAG,CAAC3Q,KAAK;UAAE8H,CAAC,EAAEqE,QAAQ,CAACrE,CAAC,EAAE,EAAE,CAAC;UAAEzI,KAAK,EAAEsR,GAAG,CAACtR;QAAM,CAAC;MAAA,CAAC,CAAC;IAC1F;EAAC;IAAAD,GAAA;IAAAC,KAAA,EAED,SAAAqQ,mBAAmB7H,CAAC,EAAE;MAClB,IAAM6I,UAAU,GAAG,IAAI,CAACT,kBAAkB,CAAC,IAAI,CAACD,SAAS,CAACnI,CAAC,CAAC,CAAC;MAC7D,OAAO6I,UAAU,CAACtE,GAAG,CAAC,UAAAuE,GAAG;QAAA,OAAK;UAAE9I,CAAC,EAAEsE,QAAQ,CAACtE,CAAC,EAAE,EAAE,CAAC;UAAEC,CAAC,EAAE6I,GAAG,CAAC3Q,KAAK;UAAEX,KAAK,EAAEsR,GAAG,CAACtR;QAAM,CAAC;MAAA,CAAC,CAAC;IAC1F;EAAC;IAAAD,GAAA;IAAAC,KAAA,EAED,SAAAsQ,gBAAgBiB,aAAa,EAAE5Q,KAAK,EAAEwK,IAAI,EAAE;MACxC,IAAI,CAACA,IAAI,EAAE,OAAO,IAAI;MAEtB,IAAI0F,KAAK;MAET,QAAOU,aAAa;QAChB,KAAK,KAAK;UACNV,KAAK,GAAG,IAAI,CAACF,SAAS,CAAChQ,KAAK,CAAC;UAC7B;QACJ,KAAK,QAAQ;UACTkQ,KAAK,GAAG,IAAI,CAACF,SAAS,CAAChQ,KAAK,CAAC,CAAC6Q,OAAO,CAAC,CAAC;UACvC;QACJ,KAAK,MAAM;UACPX,KAAK,GAAG,IAAI,CAACH,MAAM,CAAC/P,KAAK,CAAC;UAC1B;QACJ,KAAK,OAAO;UACRkQ,KAAK,GAAG,IAAI,CAACH,MAAM,CAAC/P,KAAK,CAAC,CAAC6Q,OAAO,CAAC,CAAC;UACpC;QACJ;UACI;MACR;MAEA,IAAIC,IAAI,GAAG,CAAC;MACZ,IAAIC,OAAO,GAAG,CAAC;MAEf,KAAI,IAAInP,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGsO,KAAK,CAACrO,MAAM,EAAED,CAAC,EAAE,EAAE;QAClC,IAAGsO,KAAK,CAACtO,CAAC,CAAC,GAAGmP,OAAO,EAAE;UACnBA,OAAO,GAAGb,KAAK,CAACtO,CAAC,CAAC;UAClBkP,IAAI,EAAE;QACV;MACJ;MAEA,OAAOA,IAAI,KAAKtG,IAAI;IACxB;EAAC;IAAApL,GAAA;IAAAC,KAAA,EAED,SAAA+O,oBAAoB5E,KAAK,EAAE;MAAA,IAAAjE,KAAA;MACvB,IAAMyL,UAAU,GAAG,EAAE;MACrB,IAAMC,WAAW,GAAG,IAAIR,GAAG,CAAC,CAAC;MAC7B,IAAMS,cAAc,GAAG,IAAIT,GAAG,CAAC,CAAC;MAAC,IAAArQ,SAAA,GAAAC,0BAAA,CAEjBmJ,KAAK;QAAAlJ,KAAA;MAAA;QAAA,IAAA6Q,KAAA,YAAAA,MAAA,EAAE;UAAA,IAAf3J,IAAI,GAAAlH,KAAA,CAAAjB,KAAA;UACR,IAAI4R,WAAW,CAACX,GAAG,CAAC9I,IAAI,CAACM,CAAC,CAAC,IAAIoJ,cAAc,CAACZ,GAAG,CAAC9I,IAAI,CAACK,CAAC,CAAC,EAAE;YAAA;UAE3D;UAEA,IAAI,CAACoJ,WAAW,CAACX,GAAG,CAAC9I,IAAI,CAACM,CAAC,CAAC,EAAE;YAC1B,IAAMsJ,UAAU,GAAG7L,KAAI,CAACkK,eAAe,CAACjI,IAAI,CAACM,CAAC,CAAC;YAC/CnC,OAAO,CAACC,GAAG,wBAAwBwL,UAAU,CAAC;YAE9C,IAAIA,UAAU,CAACvP,MAAM,GAAG,CAAC,EAAE;cACvBmP,UAAU,CAAClR,IAAI,CAAA8D,KAAA,CAAfoN,UAAU,EAAA1B,kBAAA,CAAS8B,UAAU,CAAChF,GAAG,CAAC,UAAAiF,CAAC;gBAAA,OAAK;kBAAExJ,CAAC,EAAEwJ,CAAC,CAACxJ,CAAC;kBAAEC,CAAC,EAAEN,IAAI,CAACM,CAAC;kBAAEzI,KAAK,EAAEgS,CAAC,CAAChS;gBAAM,CAAC;cAAA,CAAC,CAAC,EAAC;YACpF;YAEA4R,WAAW,CAACvJ,GAAG,CAACF,IAAI,CAACM,CAAC,CAAC;UAC3B;UAEA,IAAI,CAACoJ,cAAc,CAACZ,GAAG,CAAC9I,IAAI,CAACK,CAAC,CAAC,EAAE;YAC7B,IAAMyJ,aAAa,GAAG/L,KAAI,CAACmK,kBAAkB,CAAClI,IAAI,CAACK,CAAC,CAAC;YACrDlC,OAAO,CAACC,GAAG,2BAA2B0L,aAAa,CAAC;YAEpD,IAAIA,aAAa,CAACzP,MAAM,GAAG,CAAC,EAAE;cAC1BmP,UAAU,CAAClR,IAAI,CAAA8D,KAAA,CAAfoN,UAAU,EAAA1B,kBAAA,CAASgC,aAAa,CAAClF,GAAG,CAAC,UAAAiF,CAAC;gBAAA,OAAK;kBAAExJ,CAAC,EAAEwJ,CAAC,CAACxJ,CAAC;kBAAEC,CAAC,EAAEuJ,CAAC,CAACvJ,CAAC;kBAAEzI,KAAK,EAAEgS,CAAC,CAAChS;gBAAM,CAAC;cAAA,CAAC,CAAC,EAAC;YACpF;YAEA6R,cAAc,CAACxJ,GAAG,CAACF,IAAI,CAACK,CAAC,CAAC;UAC9B;QACJ,CAAC;QA1BD,KAAAzH,SAAA,CAAAG,CAAA,MAAAD,KAAA,GAAAF,SAAA,CAAAI,CAAA,IAAAC,IAAA;UAAA,IAAA0Q,KAAA,IAEQ;QAAS;MAwBhB,SAAAzQ,GAAA;QAAAN,SAAA,CAAAO,CAAA,CAAAD,GAAA;MAAA;QAAAN,SAAA,CAAAQ,CAAA;MAAA;MAED,OAAOoQ,UAAU;IACrB;EAAC;EAAA,OAAAlC,MAAA;AAAA;;;;;;;;;;;;;;IC5KgByC,WAAW,GAAAtS,OAAA,CAAAmG,OAAA;EAC5B,SAAAmM,YAAA,EAAc;IAAArS,eAAA,OAAAqS,WAAA;IACV,IAAI,CAACC,KAAK;IACV,IAAI,CAACC,UAAU,GAAG,KAAK;IACvB,IAAI,CAACC,OAAO,GAAG,KAAK;IACpB,IAAI,CAACC,MAAM,GAAG,IAAI;EACtB;EAACxS,YAAA,CAAAoS,WAAA;IAAAnS,GAAA;IAAAC,KAAA,EAED,SAAAuS,WAAA,EAAa,CAEb;EAAC;IAAAxS,GAAA;IAAAC,KAAA,EAED,SAAAwS,MAAA,EAAQ,CAER;EAAC;IAAAzS,GAAA;IAAAC,KAAA,EAED,SAAAyS,KAAA,EAAO,CAEP;EAAC;EAAA,OAAAP,WAAA;AAAA;;;;AClBL,IAAAQ,aAAA,GAAA/G,sBAAA,CAAAlK,OAAA;AACA,IAAAkR,cAAA,GAAAhH,sBAAA,CAAAlK,OAAA;AACA,IAAAmR,OAAA,GAAAjH,sBAAA,CAAAlK,OAAA;AACA,IAAAoR,YAAA,GAAAlH,sBAAA,CAAAlK,OAAA;AACA,IAAAiK,SAAA,GAAAC,sBAAA,CAAAlK,OAAA;AAA4C,SAAAkK,uBAAAxG,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAA0G,UAAA,GAAA1G,GAAA,KAAAY,OAAA,EAAAZ,GAAA;AAE5C,IAAM2N,IAAI,GAAG,SAAPA,IAAIA,CAAA,EAAS;EACf,IAAMC,YAAY,GAAG,IAAIjH,qBAAY,CAAC,CAAC;EACvC,IAAM0C,QAAQ,GAAG,IAAI1I,iBAAQ,CAAC,CAAC;EAC/B,IAAMkN,aAAa,GAAG,IAAIzE,sBAAa,CAACC,QAAQ,CAAC;EACjDuE,YAAY,CAACzS,WAAW,CAACkO,QAAQ,CAAC;EAClCuE,YAAY,CAACzS,WAAW,CAAC0S,aAAa,CAAC;EAEvC,IAAMC,aAAa,GAAG,IAAIxD,eAAM,CAAC;IAC7BlI,QAAQ,EAAE,CAAC;IACX4H,WAAW,EAAE,CACT,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EACX,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EACX,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EACX,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EACX,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,CACd;IACDE,WAAW,EAAE,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC;IACxBE,SAAS,EAAE,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC;EACzB,CAAC,CAAC;EAEF,IAAM2D,cAAc,GAAG,IAAIzD,eAAM,CAAC;IAC9BlI,QAAQ,EAAE,CAAC;IACX4H,WAAW,EAAE,CACT,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EACP,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EACP,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,CACV;IACDG,QAAQ,EAAE,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC;IACjBC,SAAS,EAAE,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC;EACrB,CAAC,CAAC;EAEFwD,YAAY,CAAC7G,8BAA8B,CAAC,CAAC;EAC7C6G,YAAY,CAACzG,4BAA4B,CAAC,CAAC;EAC3CyG,YAAY,CAAC1G,UAAU,CAAC6G,cAAc,CAAC3L,QAAQ,CAAC;EAEhDyL,aAAa,CAAC9D,SAAS,CAACgE,cAAc,CAAC;AAC3C,CAAC;AAED9M,QAAQ,CAAC+F,gBAAgB,CAAC,kBAAkB,EAAE2G,IAAI,CAAC;;;AC5CnD,IAAIK,UAAU,GAAG,4BAA4B;AAE7C,IAAIC,SAAS,GAAGC,MAAM,CAACC,MAAM,CAACC,MAAM;AAEpC,SAASA,MAAMA,CAACC,UAAU,EAAE;EAC1BJ,SAAS,CAAC1O,IAAI,CAAC,IAAI,EAAE8O,UAAU,CAAC;EAChC,IAAI,CAACC,GAAG,GAAG;IACTtT,IAAI,EAAEkT,MAAM,CAACC,MAAM,CAACI,OAAO;IAC3BC,gBAAgB,EAAE,EAAE;IACpBC,iBAAiB,EAAE,EAAE;IACrBC,MAAM,EAAE,SAAAA,CAAUC,EAAE,EAAE;MACpB,IAAI,CAACH,gBAAgB,CAAClT,IAAI,CAACqT,EAAE,IAAI,YAAY,CAAC,CAAC,CAAC;IAClD,CAAC;IACDC,OAAO,EAAE,SAAAA,CAAUD,EAAE,EAAE;MACrB,IAAI,CAACF,iBAAiB,CAACnT,IAAI,CAACqT,EAAE,CAAC;IACjC;EACF,CAAC;EAEDT,MAAM,CAACC,MAAM,CAACI,OAAO,GAAG,IAAI;AAC9B;AAEAL,MAAM,CAACC,MAAM,CAACC,MAAM,GAAGA,MAAM;AAC7B,IAAIS,aAAa,EAAEC,cAAc;AAEjC,IAAIC,MAAM,GAAGb,MAAM,CAACC,MAAM,CAACY,MAAM;AACjC,IAAI,CAAC,CAACA,MAAM,IAAI,CAACA,MAAM,CAACC,eAAe,KAAK,OAAOC,SAAS,KAAK,WAAW,EAAE;EAC5E,IAAIC,QAAQ,GAAG,MAA4BC,QAAQ,CAACD,QAAQ;EAC5D,IAAIE,QAAQ,GAAGD,QAAQ,CAACC,QAAQ,KAAK,QAAQ,GAAG,KAAK,GAAG,IAAI;EAC5D,IAAIC,EAAE,GAAG,IAAIJ,SAAS,CAACG,QAAQ,GAAG,KAAK,GAAGF,QAAQ,GAAG,GAAG,UAAuB,GAAG,GAAG,CAAC;EACtFG,EAAE,CAACC,SAAS,GAAG,UAASvU,KAAK,EAAE;IAC7B8T,aAAa,GAAG,CAAC,CAAC;IAClBC,cAAc,GAAG,EAAE;IAEnB,IAAI9T,IAAI,GAAGuU,IAAI,CAACC,KAAK,CAACzU,KAAK,CAACC,IAAI,CAAC;IAEjC,IAAIA,IAAI,CAACyU,IAAI,KAAK,QAAQ,EAAE;MAC1B,IAAIC,OAAO,GAAG,KAAK;MACnB1U,IAAI,CAAC2U,MAAM,CAACpL,OAAO,CAAC,UAASqL,KAAK,EAAE;QAClC,IAAI,CAACA,KAAK,CAACC,KAAK,EAAE;UAChB,IAAIC,SAAS,GAAGC,cAAc,CAACC,MAAM,CAACC,aAAa,EAAEL,KAAK,CAACM,EAAE,CAAC;UAC9D,IAAIJ,SAAS,EAAE;YACbJ,OAAO,GAAG,IAAI;UAChB;QACF;MACF,CAAC,CAAC;;MAEF;MACAA,OAAO,GAAGA,OAAO,IAAI1U,IAAI,CAAC2U,MAAM,CAACQ,KAAK,CAAC,UAASP,KAAK,EAAE;QACrD,OAAOA,KAAK,CAACH,IAAI,KAAK,KAAK,IAAIG,KAAK,CAACQ,SAAS,CAACC,EAAE;MACnD,CAAC,CAAC;MAEF,IAAIX,OAAO,EAAE;QACXvO,OAAO,CAACmP,KAAK,CAAC,CAAC;QAEftV,IAAI,CAAC2U,MAAM,CAACpL,OAAO,CAAC,UAAUqL,KAAK,EAAE;UACnCW,QAAQ,CAACP,MAAM,CAACC,aAAa,EAAEL,KAAK,CAAC;QACvC,CAAC,CAAC;QAEFd,cAAc,CAACvK,OAAO,CAAC,UAAUiM,CAAC,EAAE;UAClCC,YAAY,CAACD,CAAC,CAAC,CAAC,CAAC,EAAEA,CAAC,CAAC,CAAC,CAAC,CAAC;QAC1B,CAAC,CAAC;MACJ,CAAC,MAAM,IAAIrB,QAAQ,CAACuB,MAAM,EAAE;QAAE;QAC5BvB,QAAQ,CAACuB,MAAM,CAAC,CAAC;MACnB;IACF;IAEA,IAAI1V,IAAI,CAACyU,IAAI,KAAK,QAAQ,EAAE;MAC1BJ,EAAE,CAACsB,KAAK,CAAC,CAAC;MACVtB,EAAE,CAACuB,OAAO,GAAG,YAAY;QACvBzB,QAAQ,CAACuB,MAAM,CAAC,CAAC;MACnB,CAAC;IACH;IAEA,IAAI1V,IAAI,CAACyU,IAAI,KAAK,gBAAgB,EAAE;MAClCtO,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;MAExCyP,kBAAkB,CAAC,CAAC;IACtB;IAEA,IAAI7V,IAAI,CAACyU,IAAI,KAAK,OAAO,EAAE;MACzBtO,OAAO,CAAC2P,KAAK,CAAC,eAAe,GAAG9V,IAAI,CAAC8V,KAAK,CAACC,OAAO,GAAG,IAAI,GAAG/V,IAAI,CAAC8V,KAAK,CAACE,KAAK,CAAC;MAE7EH,kBAAkB,CAAC,CAAC;MAEpB,IAAII,OAAO,GAAGC,kBAAkB,CAAClW,IAAI,CAAC;MACtCiG,QAAQ,CAACkQ,IAAI,CAACnP,WAAW,CAACiP,OAAO,CAAC;IACpC;EACF,CAAC;AACH;AAEA,SAASJ,kBAAkBA,CAAA,EAAG;EAC5B,IAAII,OAAO,GAAGhQ,QAAQ,CAACmQ,cAAc,CAACpD,UAAU,CAAC;EACjD,IAAIiD,OAAO,EAAE;IACXA,OAAO,CAACnM,MAAM,CAAC,CAAC;EAClB;AACF;AAEA,SAASoM,kBAAkBA,CAAClW,IAAI,EAAE;EAChC,IAAIiW,OAAO,GAAGhQ,QAAQ,CAACc,aAAa,CAAC,KAAK,CAAC;EAC3CkP,OAAO,CAACf,EAAE,GAAGlC,UAAU;;EAEvB;EACA,IAAI+C,OAAO,GAAG9P,QAAQ,CAACc,aAAa,CAAC,KAAK,CAAC;EAC3C,IAAIsP,UAAU,GAAGpQ,QAAQ,CAACc,aAAa,CAAC,KAAK,CAAC;EAC9CgP,OAAO,CAACO,SAAS,GAAGtW,IAAI,CAAC8V,KAAK,CAACC,OAAO;EACtCM,UAAU,CAACC,SAAS,GAAGtW,IAAI,CAAC8V,KAAK,CAACE,KAAK;EAEvCC,OAAO,CAAC9O,SAAS,GACf,wNAAwN,GACtN,mFAAmF,GACnF,yEAAyE,GACzE,qEAAqE,GAAG4O,OAAO,CAAC5O,SAAS,GAAG,QAAQ,GACpG,OAAO,GAAGkP,UAAU,CAAClP,SAAS,GAAG,QAAQ,GAC3C,QACD;EAED,OAAO8O,OAAO;AAEhB;AAEA,SAASM,UAAUA,CAACpD,MAAM,EAAE+B,EAAE,EAAE;EAC9B,IAAIsB,OAAO,GAAGrD,MAAM,CAACqD,OAAO;EAC5B,IAAI,CAACA,OAAO,EAAE;IACZ,OAAO,EAAE;EACX;EAEA,IAAIC,OAAO,GAAG,EAAE;EAChB,IAAIC,CAAC,EAAEC,CAAC,EAAEC,GAAG;EAEb,KAAKF,CAAC,IAAIF,OAAO,EAAE;IACjB,KAAKG,CAAC,IAAIH,OAAO,CAACE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;MACvBE,GAAG,GAAGJ,OAAO,CAACE,CAAC,CAAC,CAAC,CAAC,CAAC,CAACC,CAAC,CAAC;MACtB,IAAIC,GAAG,KAAK1B,EAAE,IAAKnI,KAAK,CAACC,OAAO,CAAC4J,GAAG,CAAC,IAAIA,GAAG,CAACA,GAAG,CAACvU,MAAM,GAAG,CAAC,CAAC,KAAK6S,EAAG,EAAE;QACpEuB,OAAO,CAACnW,IAAI,CAACoW,CAAC,CAAC;MACjB;IACF;EACF;EAEA,IAAIvD,MAAM,CAACY,MAAM,EAAE;IACjB0C,OAAO,GAAGA,OAAO,CAACpQ,MAAM,CAACkQ,UAAU,CAACpD,MAAM,CAACY,MAAM,EAAEmB,EAAE,CAAC,CAAC;EACzD;EAEA,OAAOuB,OAAO;AAChB;AAEA,SAASlB,QAAQA,CAACpC,MAAM,EAAEyB,KAAK,EAAE;EAC/B,IAAI4B,OAAO,GAAGrD,MAAM,CAACqD,OAAO;EAC5B,IAAI,CAACA,OAAO,EAAE;IACZ;EACF;EAEA,IAAIA,OAAO,CAAC5B,KAAK,CAACM,EAAE,CAAC,IAAI,CAAC/B,MAAM,CAACY,MAAM,EAAE;IACvC,IAAIJ,EAAE,GAAG,IAAIkD,QAAQ,CAAC,SAAS,EAAE,QAAQ,EAAE,SAAS,EAAEjC,KAAK,CAACQ,SAAS,CAACC,EAAE,CAAC;IACzET,KAAK,CAACC,KAAK,GAAG,CAAC2B,OAAO,CAAC5B,KAAK,CAACM,EAAE,CAAC;IAChCsB,OAAO,CAAC5B,KAAK,CAACM,EAAE,CAAC,GAAG,CAACvB,EAAE,EAAEiB,KAAK,CAACkC,IAAI,CAAC;EACtC,CAAC,MAAM,IAAI3D,MAAM,CAACY,MAAM,EAAE;IACxBwB,QAAQ,CAACpC,MAAM,CAACY,MAAM,EAAEa,KAAK,CAAC;EAChC;AACF;AAEA,SAASG,cAAcA,CAAC5B,MAAM,EAAE+B,EAAE,EAAE;EAClC,IAAIsB,OAAO,GAAGrD,MAAM,CAACqD,OAAO;EAC5B,IAAI,CAACA,OAAO,EAAE;IACZ;EACF;EAEA,IAAI,CAACA,OAAO,CAACtB,EAAE,CAAC,IAAI/B,MAAM,CAACY,MAAM,EAAE;IACjC,OAAOgB,cAAc,CAAC5B,MAAM,CAACY,MAAM,EAAEmB,EAAE,CAAC;EAC1C;EAEA,IAAIrB,aAAa,CAACqB,EAAE,CAAC,EAAE;IACrB;EACF;EACArB,aAAa,CAACqB,EAAE,CAAC,GAAG,IAAI;EAExB,IAAI6B,MAAM,GAAG5D,MAAM,CAAC6D,KAAK,CAAC9B,EAAE,CAAC;EAE7BpB,cAAc,CAACxT,IAAI,CAAC,CAAC6S,MAAM,EAAE+B,EAAE,CAAC,CAAC;EAEjC,IAAI6B,MAAM,IAAIA,MAAM,CAACzD,GAAG,IAAIyD,MAAM,CAACzD,GAAG,CAACE,gBAAgB,CAACnR,MAAM,EAAE;IAC9D,OAAO,IAAI;EACb;EAEA,OAAOkU,UAAU,CAACvB,MAAM,CAACC,aAAa,EAAEC,EAAE,CAAC,CAAC+B,IAAI,CAAC,UAAU/B,EAAE,EAAE;IAC7D,OAAOH,cAAc,CAACC,MAAM,CAACC,aAAa,EAAEC,EAAE,CAAC;EACjD,CAAC,CAAC;AACJ;AAEA,SAASO,YAAYA,CAACtC,MAAM,EAAE+B,EAAE,EAAE;EAChC,IAAI6B,MAAM,GAAG5D,MAAM,CAAC6D,KAAK,CAAC9B,EAAE,CAAC;EAC7B/B,MAAM,CAACI,OAAO,GAAG,CAAC,CAAC;EACnB,IAAIwD,MAAM,EAAE;IACVA,MAAM,CAACzD,GAAG,CAACtT,IAAI,GAAGmT,MAAM,CAACI,OAAO;EAClC;EAEA,IAAIwD,MAAM,IAAIA,MAAM,CAACzD,GAAG,IAAIyD,MAAM,CAACzD,GAAG,CAACG,iBAAiB,CAACpR,MAAM,EAAE;IAC/D0U,MAAM,CAACzD,GAAG,CAACG,iBAAiB,CAAClK,OAAO,CAAC,UAAU2N,EAAE,EAAE;MACjDA,EAAE,CAAC/D,MAAM,CAACI,OAAO,CAAC;IACpB,CAAC,CAAC;EACJ;EAEA,OAAOJ,MAAM,CAAC6D,KAAK,CAAC9B,EAAE,CAAC;EACvB/B,MAAM,CAAC+B,EAAE,CAAC;EAEV6B,MAAM,GAAG5D,MAAM,CAAC6D,KAAK,CAAC9B,EAAE,CAAC;EACzB,IAAI6B,MAAM,IAAIA,MAAM,CAACzD,GAAG,IAAIyD,MAAM,CAACzD,GAAG,CAACE,gBAAgB,CAACnR,MAAM,EAAE;IAC9D0U,MAAM,CAACzD,GAAG,CAACE,gBAAgB,CAACjK,OAAO,CAAC,UAAU2N,EAAE,EAAE;MAChDA,EAAE,CAAC,CAAC;IACN,CAAC,CAAC;IACF,OAAO,IAAI;EACb;AACF","file":"App.f684dadd.js","sourceRoot":"..","sourcesContent":["export class Observer {\r\n    notify(event, data) {\r\n        throw new Error('This method should be overridden by subclass');\r\n    }\r\n}\r\n\r\nexport class Observable {\r\n    addObserver(observer) {\r\n        this.observers.push(observer);\r\n      }\r\n    \r\n      removeObserver(observer) {\r\n        const index = this.observers.indexOf(observer);\r\n        if (index > -1) {\r\n          this.observers.splice(index, 1);\r\n        }\r\n      }\r\n    \r\n      notifyObservers(event, data) {\r\n        for (const observer of this.observers) {\r\n          observer.notify(event, data);\r\n        }\r\n      }\r\n}","import { Observer } from \"../utils/Observer.js\";\r\n\r\nexport default class Renderer extends Observer {\r\n    constructor() {\r\n        super();\r\n        this.grid = document.querySelector('.grid');\r\n    }\r\n\r\n    // CSS Classes \r\n    static GRID_CLASS = 'grid';\r\n    \r\n    static CELL_CLASS = 'cell';\r\n    static CELL_SELECTED_CLASS = 'selected';\r\n    static CELL_GIVEN_CLASS = 'given';\r\n    static ERROR_CLASS = 'error';\r\n    static SELECTED_CELL_SELECTOR = `.${Renderer.CELL_CLASS}.${Renderer.CELL_SELECTED_CLASS}`;\r\n    static GIVEN_CELL_SELECTOR = `.${Renderer.CELL_CLASS}.${Renderer.CELL_GIVEN_CLASS}`;\r\n\r\n    static CELL_INNER_CONTAINER_CLASS = 'cell-inner-container';\r\n\r\n    static CLUE_CONTAINER_CLASS = 'clue-container'\r\n    static CLUE_CELL_CLASS = 'clue-cell';\r\n    static CLUE_TOP_CLASS = 'top';\r\n    static CLUE_BOTTOM_CLASS = 'bottom';\r\n    static CLUE_LEFT_CLASS = 'left';\r\n    static CLUE_RIGHT_CLASS = 'right';\r\n\r\n    notify(event, data) {\r\n\r\n        console.log(`Renderer received event: ${event}, with data:`, data)\r\n\r\n        if(event === 'DeselectAll') {\r\n            this.deselectAll();\r\n        }\r\n        if(event === 'ToggleCellSelect') {\r\n            this.toggleCellSelect(data);\r\n        }\r\n        if(event === 'SelectCell') {\r\n            this.deselectAll();\r\n            this.select(data);\r\n        }\r\n        if(event === 'UpdateCellValues') {\r\n            this.updateSelectedCellValues(data);\r\n        }\r\n        if(event === 'ClearSelectedCells') {\r\n            this.clearSelectedCells();\r\n        }\r\n    }\r\n\r\n    static getAllSelectedCells() {\r\n        const cells = []\r\n\r\n        const selectedCells = document.querySelectorAll(Renderer.SELECTED_CELL_SELECTOR);\r\n\r\n        selectedCells.forEach(cell => {\r\n            cells.push({\r\n                x: cell.dataset.x,\r\n                y: cell.dataset.y\r\n            });\r\n        })\r\n        console.log(`Selected cells:`, cells);\r\n\r\n        return cells;\r\n    }\r\n\r\n    // Methods\r\n    createAndAppendDiv(parentElement, manipulateFn) {\r\n        const newDiv = document.createElement(\"div\");\r\n\r\n        if (typeof manipulateFn === \"function\") {\r\n            manipulateFn(newDiv, this);\r\n        }\r\n\r\n        parentElement.appendChild(newDiv);\r\n    }\r\n\r\n    generateGrid(size) {\r\n        // Clear grid\r\n        this.grid.innerHTML = '';\r\n\r\n        // Calculate pixel size of grid\r\n        const gridSize = Math.min(\r\n            400,\r\n            Math.max(300, window.innerWidth - 50)\r\n        );\r\n        const cellSize = gridSize / size;\r\n\r\n        this.grid.style.width = `${gridSize}px`;\r\n        this.grid.style.height = `${gridSize}px`;\r\n\r\n        // Update layout to size\r\n        this.grid.style.gridTemplateColumns = `repeat(${size}, 1fr)`;\r\n\r\n        for (let i = 0; i < size ** 2; i++) {\r\n            const cell = document.createElement(\"div\");\r\n            cell.classList.add(Renderer.CELL_CLASS);\r\n\r\n            cell.style.width = `${cellSize}px`;\r\n            cell.style.height = `${cellSize}px`;\r\n\r\n            cell.dataset.x = i % size;\r\n            cell.dataset.y = Math.floor(i / size);\r\n\r\n            const cellInnerContainer = document.createElement(\"div\");\r\n            cellInnerContainer.classList.add(Renderer.CELL_INNER_CONTAINER_CLASS);\r\n            cellInnerContainer.textContent = '';\r\n            cell.appendChild(cellInnerContainer);\r\n            \r\n            this.grid.appendChild(cell);\r\n        }\r\n\r\n        const topClueContainer = document.querySelector(`.${Renderer.CLUE_CONTAINER_CLASS}.${Renderer.CLUE_TOP_CLASS}`);\r\n        const bottomClueContainer = document.querySelector(`.${Renderer.CLUE_CONTAINER_CLASS}.${Renderer.CLUE_BOTTOM_CLASS}`);\r\n        const leftClueContainer = document.querySelector(`.${Renderer.CLUE_CONTAINER_CLASS}.${Renderer.CLUE_LEFT_CLASS}`);\r\n        const rightClueContainer = document.querySelector(`.${Renderer.CLUE_CONTAINER_CLASS}.${Renderer.CLUE_RIGHT_CLASS}`);\r\n\r\n        const clueContainers = [\r\n            topClueContainer,\r\n            bottomClueContainer,\r\n            leftClueContainer,\r\n            rightClueContainer\r\n        ]\r\n\r\n        const mainAxisSize = gridSize;\r\n        const crossAxisSize = '2.5rem';\r\n\r\n        topClueContainer.style.width = mainAxisSize;\r\n        topClueContainer.style.height = crossAxisSize;\r\n\r\n        bottomClueContainer.style.width = mainAxisSize;\r\n        bottomClueContainer.style.height = crossAxisSize;\r\n\r\n        leftClueContainer.style.width = crossAxisSize;\r\n        leftClueContainer.style.height = mainAxisSize;\r\n\r\n        rightClueContainer.style.width = crossAxisSize;\r\n        rightClueContainer.style.height = mainAxisSize;\r\n\r\n        clueContainers.forEach(container => {\r\n            for(let i = 0; i < size; i++) {\r\n                const clueCell = document.createElement(\"div\");\r\n                clueCell.classList.add(Renderer.CLUE_CELL_CLASS);\r\n                clueCell.dataset.index = i\r\n\r\n                if(\r\n                    container.classList.contains(Renderer.CLUE_TOP_CLASS) || \r\n                    container.classList.contains(Renderer.CLUE_BOTTOM_CLASS)\r\n                ) {\r\n                    clueCell.style.width = `${cellSize}px`;\r\n                    clueCell.style.height = crossAxisSize;\r\n                } else {\r\n                    clueCell.style.width = crossAxisSize;\r\n                    clueCell.style.height = `${cellSize}px`;\r\n                }\r\n\r\n                container.appendChild(clueCell);\r\n            }\r\n        });\r\n    }\r\n\r\n    select(cell) {\r\n        cell.classList.add(Renderer.CELL_SELECTED_CLASS);\r\n        // this.updateBorders(cell);\r\n        // this.updateNeighbourBorders(cell);\r\n    }\r\n\r\n    deselect(cell) {\r\n        cell.classList.remove(Renderer.CELL_SELECTED_CLASS);\r\n    }\r\n\r\n    deselectAll() {\r\n        const cells = document.querySelectorAll(Renderer.SELECTED_CELL_SELECTOR);\r\n        cells.forEach((cell) => this.deselect(cell));\r\n    }\r\n\r\n    toggleCellSelect(cell) {\r\n        cell.classList.toggle(Renderer.CELL_SELECTED_CLASS);\r\n    }\r\n\r\n    updateSelectedCellValues(value) {\r\n        const selectedCells = document.querySelectorAll(Renderer.SELECTED_CELL_SELECTOR);\r\n        const changedCells = [];\r\n\r\n        selectedCells.forEach(cell => {\r\n            if (cell.classList.contains(Renderer.CELL_GIVEN_CLASS)) return;\r\n            cell.querySelector(`.${Renderer.CELL_INNER_CONTAINER_CLASS}`).textContent = value;\r\n        });\r\n    }\r\n\r\n    clearSelectedCells() {\r\n        const selectedCells = document.querySelectorAll(Renderer.SELECTED_CELL_SELECTOR);\r\n        const changedCells = [];\r\n\r\n        selectedCells.forEach(cell => {\r\n            cell.querySelector(`.${Renderer.CELL_INNER_CONTAINER_CLASS}`).textContent = '';\r\n        });\r\n    }\r\n\r\n    populateGivenCellAt(x, y, value) {\r\n        if(value && value > 0) {\r\n            const cell = document.querySelector(`[data-x='${x}'][data-y='${y}']`);\r\n            cell.querySelector(`.${Renderer.CELL_INNER_CONTAINER_CLASS}`).textContent = value;\r\n            this.setCellAsGiven(cell);\r\n        }\r\n    }\r\n\r\n    populateClues(clueContainerPosition, cluesToPopulate) {\r\n        const clueContainerSelector = document.querySelector(`.${Renderer.CLUE_CONTAINER_CLASS}.${clueContainerPosition}`);\r\n        \r\n        for(let i = 0; i < cluesToPopulate.length; i++) {\r\n            if (!cluesToPopulate[i] || cluesToPopulate[i] <= 0) continue;\r\n            const clueCell = clueContainerSelector.querySelector(`[data-index='${i}']`);\r\n            clueCell.textContent = cluesToPopulate[i];\r\n        }\r\n    }\r\n\r\n    setCellAsGiven(cell) {\r\n        cell.classList.add(Renderer.CELL_GIVEN_CLASS);\r\n    }\r\n\r\n    highlightError(cell) {\r\n        cell.classList.add('error');\r\n    }\r\n\r\n    highlightSeenClueError(position, index) {\r\n        const clue = document.querySelector(`.clue-container.${position}[data-index='${index}']`);\r\n    }\r\n}","export function findAncestor(el, sel) {\r\n  while ((el = el.parentElement) && !((el.matches || el.matchesSelector).call(el, sel)));\r\n  return el;\r\n}","import Renderer from \"./Renderer.js\";\r\nimport { Observable } from \"../utils/Observer.js\";\r\nimport { findAncestor } from \"../helpers/helper.js\";\r\n\r\nexport default class InputHandler extends Observable {\r\n    constructor() {\r\n        super();\r\n        this.shiftPressed = false;\r\n        this.maxSize = 0;\r\n        this.observers = [];\r\n    }\r\n\r\n    initialiseGlobalEventListeners() {\r\n        document.addEventListener(\"keydown\", (event) => {\r\n            if (event.key === \"Shift\") {\r\n                this.shiftPressed = true;\r\n            }\r\n        });\r\n\r\n        document.addEventListener(\"keyup\", (event) => {\r\n            if (event.key === \"Shift\") {\r\n                this.shiftPressed = false;\r\n            }\r\n        });\r\n\r\n        document.addEventListener(\"keyup\", (event) => {\r\n            if (event.key === \"Escape\") {\r\n                this.notifyObservers('DeselectAll', {});\r\n            }\r\n        });\r\n\r\n        document.addEventListener(\"keydown\", (event) => this.handleKeyPress(event));\r\n    }\r\n\r\n    setMaxSize(gridSize) {\r\n        this.maxSize = gridSize;\r\n    }\r\n\r\n    addClickEventListenersToGrid() {\r\n        const grid = document.querySelector(`.${Renderer.GRID_CLASS}`);\r\n        grid.addEventListener('click', (event) => this.handleCellClick(event));\r\n    }\r\n\r\n    handleCellClick(event) {\r\n        const clickedCell = findAncestor(event.target, '.cell');\r\n        console.log(`Clicked: `, clickedCell)\r\n\r\n        if(this.shiftPressed) {\r\n            this.notifyObservers('ToggleCellSelect', clickedCell)\r\n        } else {\r\n            this.notifyObservers('SelectCell', clickedCell)\r\n        }\r\n        \r\n    }\r\n\r\n    handleKeyPress(event) {\r\n        const keyPressed = event.key;\r\n        let selectedCells = []\r\n\r\n        if(!isNaN(keyPressed)) {\r\n            const val = parseInt(keyPressed, 10);\r\n            if(val > 0 && val <= this.maxSize) {\r\n                selectedCells = Renderer.getAllSelectedCells();\r\n                this.notifyObservers('UpdateCellValues', val)\r\n                this.notifyObservers(\r\n                    'userChangedCellValue', \r\n                    selectedCells.map(cell => ({x: cell.x, y: cell.y, value: val}))\r\n                )\r\n            }\r\n        }\r\n\r\n        if(keyPressed === \"Delete\" || keyPressed === \"Backspace\") {\r\n            selectedCells = Renderer.getAllSelectedCells();\r\n            this.notifyObservers('ClearSelectedCells', {});\r\n            this.notifyObservers(\r\n                'userClearedCells', \r\n                selectedCells.map(cell => ({x: cell.x, y: cell.y, value: 0}))\r\n            );\r\n        }\r\n\r\n        \r\n    }\r\n}","import { Observer } from \"../utils/Observer.js\";\r\n\r\nexport default class PuzzleManager extends Observer {\r\n    constructor(renderer, puzzle = []) {\r\n        super();\r\n        this.renderer = renderer;\r\n        this.puzzle = puzzle;\r\n\r\n        this.puzzleState = '';\r\n    }\r\n\r\n    notify(event, changedCells) {\r\n\r\n        console.log(`Received event: ${event}, with data:`, changedCells)\r\n\r\n        if(event === 'userChangedCellValue') {\r\n            console.log(`Entering 'userChangedCellValue' logic`)\r\n            console.log(`Looping through ${changedCells.length} changed cells`)\r\n            \r\n            for(const cell of changedCells) {\r\n                this.puzzle.userInput(cell.x, cell.y, cell.value)\r\n            }\r\n            console.log(`For loop complete, currentState: ${this.puzzle.currentState}`);\r\n\r\n            if(this.puzzle.isFilled()) {\r\n                this.puzzleState = 'FILLED';\r\n                console.log(\"PUZZLE IS FILLED\");\r\n                if(this.puzzle.isSolved()) {\r\n                    console.log(\"PUZZLE IS SOLVED\");\r\n                }\r\n            } else {\r\n                console.log(`Errors: `, this.puzzle.checkCellsForErrors(changedCells))\r\n            }\r\n        }\r\n\r\n        if(event === 'userClearedCells') {\r\n            console.log(`Entering 'userClearedCells' logic`)\r\n            console.log(`Looping through ${changedCells.length} changed cells`)\r\n            for(const cell of changedCells) {\r\n                this.puzzle.userInput(cell.x, cell.y, 0);\r\n            }\r\n            console.log(`For loop complete, currentState: ${this.puzzle.currentState}`);\r\n        }\r\n    }\r\n\r\n    newPuzzle(\r\n        gridSize,\r\n        givenDigits = [],\r\n        topClues = [],\r\n        bottomClues = [],\r\n        leftClues = [],\r\n        rightClues = []\r\n    ) {\r\n        this.renderer.generateGrid(gridSize);\r\n\r\n        // Populate Given Digits\r\n        for(let i = 0; i < givenDigits.length; i++) {\r\n            for(let j = 0; j < givenDigits[i].length; j++) {\r\n                this.renderer.populateGivenCellAt(j, i, givenDigits[i][j]);\r\n            }\r\n        }\r\n\r\n        this.renderer.populateClues('top', topClues);\r\n        this.renderer.populateClues('bottom', bottomClues);\r\n        this.renderer.populateClues('left', leftClues);\r\n        this.renderer.populateClues('right', rightClues);\r\n    }\r\n\r\n    newPuzzle(puzzle) {\r\n        this.puzzle = puzzle;\r\n        this.renderer.generateGrid(puzzle.gridSize);\r\n\r\n        // Populate Given Digits\r\n        for(let i = 0; i < puzzle.givenDigits.length; i++) {\r\n            for(let j = 0; j < puzzle.givenDigits[i].length; j++) {\r\n                this.renderer.populateGivenCellAt(j, i, puzzle.givenDigits[i][j]);\r\n            }\r\n        }\r\n\r\n        this.renderer.populateClues('bottom', puzzle.bottomClues);\r\n        this.renderer.populateClues('top', puzzle.topClues);\r\n        this.renderer.populateClues('left', puzzle.leftClues);\r\n        this.renderer.populateClues('right', puzzle.rightClues);\r\n    }\r\n    \r\n}","export default class Puzzle {\r\n    constructor({\r\n        gridSize,\r\n        givenDigits = [],\r\n        topClues = [],\r\n        bottomClues = [],\r\n        leftClues = [],\r\n        rightClues = []\r\n    }) {\r\n        this.gridSize = gridSize;\r\n        this.givenDigits = givenDigits;\r\n        this.topClues = topClues;\r\n        this.bottomClues = bottomClues;\r\n        this.leftClues = leftClues;\r\n        this.rightClues = rightClues;\r\n\r\n        this.currentState = givenDigits.map(row => [...row]);\r\n        this.errors = [];\r\n    }\r\n\r\n    userInput(x, y, value) {\r\n        console.log(`Puzzle received userInput for ${x},${y} of ${value}`)\r\n        if (this.givenDigits[y][x]) return;\r\n        this.currentState[y][x] = value;\r\n    }\r\n\r\n    validate() {\r\n\r\n    }\r\n\r\n    isFilled() {\r\n        for(let i = 0; i < this.gridSize; i++) {\r\n            for(let j = 0; j < this.gridSize; j++) {\r\n                if(this.currentState[j][i] < 1) return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    isSolved() {\r\n        for(let i = 0; i < this.gridSize; i++) {\r\n            if (\r\n                this.duplicatesInRow(i).length > 0 ||\r\n                this.duplicatesInColumn(i).length > 0 ||\r\n                !this.isClueSatisfied('top', i, this.topClues[i]) ||\r\n                !this.isClueSatisfied('bottom', i, this.bottomClues[i]) ||\r\n                !this.isClueSatisfied('left', i, this.leftClues[i]) ||\r\n                !this.isClueSatisfied('right', i, this.rightClues[i])\r\n            ) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    toJSON() {\r\n\r\n    }\r\n\r\n    fromJSON(json) {\r\n\r\n    }\r\n\r\n    getRow(y) {\r\n        return this.currentState[y];\r\n    }\r\n\r\n    getColumn(x) {\r\n        return this.currentState.map((value) => value[x]);\r\n    }\r\n\r\n    checkForDuplicates(array) {\r\n        const valueToIndex = new Map();\r\n        const duplicateIndices = []\r\n\r\n        for (let i = 0; i < array.length; i++) {\r\n            const value = array[i];\r\n\r\n            if (value === 0) continue;\r\n            \r\n            if (valueToIndex.has(value)) {\r\n              duplicateIndices.push({ index: i, value });\r\n              duplicateIndices.push({ index: valueToIndex.get(value), value });\r\n            } else {\r\n              valueToIndex.set(value, i);\r\n            }\r\n          }\r\n        \r\n          // Remove duplicates from the duplicateIndices array\r\n          return Array.from(new Set(duplicateIndices));\r\n    }\r\n\r\n    duplicatesInRow(y) {\r\n        const duplicates = this.checkForDuplicates(this.getRow(y));\r\n        return duplicates.map(dup => ({ x: dup.index, y: parseInt(y, 10), value: dup.value }));\r\n    }\r\n\r\n    duplicatesInColumn(x) {\r\n        const duplicates = this.checkForDuplicates(this.getColumn(x));\r\n        return duplicates.map(dup => ({ x: parseInt(x, 10), y: dup.index, value: dup.value }));\r\n    }\r\n\r\n    isClueSatisfied(clueDirection, index, clue) {\r\n        if (!clue) return true;\r\n\r\n        let array;\r\n\r\n        switch(clueDirection) {\r\n            case 'top':\r\n                array = this.getColumn(index);\r\n                break;\r\n            case 'bottom':\r\n                array = this.getColumn(index).reverse();\r\n                break;\r\n            case 'left':\r\n                array = this.getRow(index);\r\n                break;\r\n            case 'right':\r\n                array = this.getRow(index).reverse();\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        let seen = 0;\r\n        let tallest = 0;\r\n\r\n        for(let i = 0; i < array.length; i++) {\r\n            if(array[i] > tallest) {\r\n                tallest = array[i];\r\n                seen++;\r\n            }\r\n        }\r\n\r\n        return seen === clue;\r\n    }\r\n\r\n    checkCellsForErrors(cells) {\r\n        const errorCells = [];\r\n        const checkedRows = new Set();\r\n        const checkedColumns = new Set();\r\n\r\n        for(let cell of cells) {\r\n            if (checkedRows.has(cell.y) && checkedColumns.has(cell.x)) {\r\n                continue;\r\n            }\r\n\r\n            if (!checkedRows.has(cell.y)) {\r\n                const dupesInRow = this.duplicatesInRow(cell.y);\r\n                console.log(`Duplicates in Row: `, dupesInRow);\r\n\r\n                if (dupesInRow.length > 0) {\r\n                    errorCells.push(...dupesInRow.map(c => ({ x: c.x, y: cell.y, value: c.value })));\r\n                }\r\n\r\n                checkedRows.add(cell.y);\r\n            }\r\n\r\n            if (!checkedColumns.has(cell.x)) {\r\n                const dupesInColumn = this.duplicatesInColumn(cell.x);\r\n                console.log(`Duplicates in Column: `, dupesInColumn);\r\n\r\n                if (dupesInColumn.length > 0) {\r\n                    errorCells.push(...dupesInColumn.map(c => ({ x: c.x, y: c.y, value: c.value })));\r\n                }\r\n\r\n                checkedColumns.add(cell.x);\r\n            }\r\n        }\r\n        \r\n        return errorCells;\r\n    }\r\n}","export default class GameManager {\r\n    constructor() {\r\n        this.timer;\r\n        this.showErrors = false;\r\n        this.zenMode = false;\r\n        this.solved = true;\r\n    }\r\n\r\n    startTimer() {\r\n\r\n    }\r\n\r\n    start() {\r\n        \r\n    }\r\n\r\n    stop() {\r\n\r\n    }\r\n\r\n}","import InputHandler from \"./models/InputHandler.js\";\r\nimport PuzzleManager from \"./models/PuzzleManager.js\";\r\nimport Puzzle from \"./models/Puzzle.js\";\r\nimport GameManager from \"./models/GameManager.js\";\r\nimport Renderer from \"./models/Renderer.js\";\r\n\r\nconst main = () => {\r\n    const inputHandler = new InputHandler();\r\n    const renderer = new Renderer();\r\n    const puzzleManager = new PuzzleManager(renderer);\r\n    inputHandler.addObserver(renderer);\r\n    inputHandler.addObserver(puzzleManager);\r\n\r\n    const examplePuzzle = new Puzzle({\r\n        gridSize: 5,\r\n        givenDigits: [\r\n            [1,0,0,0,0],\r\n            [0,0,0,0,0],\r\n            [0,0,0,0,1],\r\n            [0,0,0,4,2],\r\n            [0,0,2,0,0]\r\n        ],\r\n        bottomClues: [0,0,0,1,0],\r\n        leftClues: [0,1,0,0,0]\r\n    })\r\n\r\n    const examplePuzzle2 = new Puzzle({\r\n        gridSize: 3,\r\n        givenDigits: [\r\n            [1,0,0],\r\n            [0,2,0],\r\n            [0,0,0],\r\n        ],\r\n        topClues: [2,0,0],\r\n        leftClues: [0,1,0]\r\n    })\r\n\r\n    inputHandler.initialiseGlobalEventListeners();\r\n    inputHandler.addClickEventListenersToGrid();\r\n    inputHandler.setMaxSize(examplePuzzle2.gridSize);\r\n\r\n    puzzleManager.newPuzzle(examplePuzzle2);\r\n}\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", main);\r\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}